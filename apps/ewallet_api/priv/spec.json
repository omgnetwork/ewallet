{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "eWallet API",
    "description" : "This is the documentation for the eWallet client API.\nClient calls are authorized using the 'Authorization' HTTP header with the following format:\n\n- Client: `Authorization=OMGClient Base64(api_key:authentication_token)`\nDue to HTTP-RPC nature, the API will always return a `200` HTTP status, including on errors. Only in case of an internal server error that `500` will be returned.\n\nError codes are available in [html](./errors), [json](./errors.json) and [yaml](./errors.yaml) formats.\n",
    "contact" : {
      "name" : "OmiseGO",
      "email" : "thibault@omisego.co"
    },
    "license" : {
      "name" : "Apache 2.0: https://www.apache.org/licenses/LICENSE-2.0",
      "url" : "https://omisego.network/"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/api/client"
  } ],
  "tags" : [ {
    "name" : "Session",
    "description" : "Resources related to session tokens."
  }, {
    "name" : "User",
    "description" : "Resources related to users. A user is an entity uniquely identified by its provider_user_id which is the user id in the provider database."
  }, {
    "name" : "Wallet",
    "description" : "Resources related to wallets of a specific user. Wallets contains the balances of tokens that users and accounts own."
  }, {
    "name" : "Transaction",
    "description" : "Resources related to transactions."
  }, {
    "name" : "TransactionRequest",
    "description" : "Resources related to the creation of transaction requests (either receiving or sending) that needs to be consumed by another user."
  }, {
    "name" : "TransactionConsumption",
    "description" : "Resources related to consumption of transaction requests."
  }, {
    "name" : "Setting",
    "description" : "Resources related to global settings of the wallet."
  } ],
  "paths" : {
    "/user.login" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Login to retrieve a user's authentication_token.",
        "operationId" : "user_login",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/LoginBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single authentication token",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationTokenResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.logout" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Expires a user's authentication_token.",
        "operationId" : "me_logout",
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/user.signup" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Sign up a new user",
        "operationId" : "user_signup",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserSignupBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.verify_email" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Verify the email for a user",
        "operationId" : "user_verify_email",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserVerifyEmailBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/me.get" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Get the user corresponding to the provided authentication token.",
        "operationId" : "me_get",
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.get_wallets" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Get the wallets of a specific user. The client can call this to get the wallets of the user corresponding to the authentication_token provided.",
        "operationId" : "me_get_wallets",
        "responses" : {
          "200" : {
            "description" : "Returns a list of wallets.",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MultipleWalletsResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.get_transactions" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Get the list of transactions for the current user.",
        "operationId" : "get_current_user_transactions",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CurrentUserTransactionsBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transactions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.create_transaction" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Transfer the specified amount to a wallet.",
        "operationId" : "me_transaction",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTransactionBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single transaction",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.create_transaction_request" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Create a new transaction request.",
        "description" : "This is a client call only.",
        "operationId" : "create_transaction_request",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ClientCreateTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionRequestResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.get_transaction_request" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Get a transaction request.",
        "description" : "This is a client call only.",
        "operationId" : "get_transaction_request",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/GetTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionRequestResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.consume_transaction_request" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Consume a transaction request.",
        "description" : "This is a client call only.",
        "operationId" : "consume_transaction_request",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ClientConsumeTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.approve_transaction_consumption" : {
      "post" : {
        "tags" : [ "TransactionConsumption" ],
        "summary" : "Approve a consumption.",
        "description" : "This is a client call only.",
        "operationId" : "approve_transaction_consumption",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConsumptionConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.reject_transaction_consumption" : {
      "post" : {
        "tags" : [ "TransactionConsumption" ],
        "summary" : "Reject a consumption.",
        "description" : "This is a client call only.",
        "operationId" : "reject_transaction_consumption",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConsumptionConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.get_settings" : {
      "post" : {
        "tags" : [ "Setting" ],
        "summary" : "Get the global settings.",
        "operationId" : "me_get_settings",
        "responses" : {
          "200" : {
            "description" : "Returns a list of settings",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "BaseResponseSchema" : {
        "required" : [ "data", "success", "version" ],
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "data" : {
            "type" : "object"
          }
        },
        "description" : "The response schema for a successful operation",
        "example" : {
          "version" : "1",
          "success" : true,
          "data" : { }
        }
      },
      "UnpaginatedListSchema" : {
        "required" : [ "data", "object" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "description" : "The object schema for an unpaginated list",
        "example" : {
          "object" : "list"
        }
      },
      "PaginatedListSchema" : {
        "required" : [ "data", "object", "pagination" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "pagination" : {
            "$ref" : "#/components/schemas/PaginatedListSchema_pagination"
          }
        },
        "description" : "The object schema for a paginated list",
        "example" : {
          "object" : "list",
          "data" : [ ],
          "pagination" : {
            "per_page" : 10,
            "current_page" : 1,
            "is_first_page" : true,
            "is_last_page" : true
          }
        }
      },
      "ErrorSchema" : {
        "required" : [ "code", "description", "messages", "object" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "messages" : {
            "type" : "object"
          }
        },
        "description" : "The object schema for an error",
        "example" : {
          "object" : "error",
          "code" : "server:internal_server_error",
          "description" : "Something went wrong on the server",
          "messages" : {
            "error_key" : "error_reason"
          }
        }
      },
      "ErrorResponseSchema" : {
        "description" : "The response schema for an error",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/ErrorSchema"
            }
          },
          "example" : {
            "success" : false,
            "data" : {
              "object" : "error",
              "code" : "server:internal_server_error",
              "description" : "Something went wrong on the server",
              "messages" : {
                "error_key" : "error_reason"
              }
            }
          }
        } ]
      },
      "AuthenticationTokenSchema" : {
        "required" : [ "authentication_token", "object", "user", "user_id" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "authentication_token" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserSchema"
          }
        },
        "description" : "The object schema for an authentication token"
      },
      "AuthenticationTokenResponse" : {
        "description" : "The response schema for an authentication token",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/AuthenticationTokenSchema"
            }
          },
          "example" : {
            "data" : {
              "object" : "authentication_token",
              "authentication_token" : "azJRj09l7jvR8KhTqUs3",
              "user_id" : "usr_01cc02x0v98qcctvycfx4vsk8x",
              "user" : {
                "object" : "user",
                "id" : "usr_01cc02x0v98qcctvycfx4vsk8x",
                "provider_user_id" : "wijf-fbancomw-dqwjudb",
                "username" : "johndoe",
                "email" : "johndoe@omise.co",
                "metadata" : {
                  "first_name" : "John",
                  "last_name" : "Doe"
                },
                "encrypted_metadata" : {
                  "something" : "secret"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              }
            }
          }
        } ]
      },
      "UserSchema" : {
        "required" : [ "created_at", "id", "object", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "provider_user_id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "avatar" : {
            "type" : "object"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a user",
        "example" : {
          "object" : "user",
          "id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
          "provider_user_id" : "wijf-fbancomw-dqwjudb",
          "username" : "johndoe",
          "email" : "johndoe@omise.co",
          "metadata" : {
            "first_name" : "John",
            "last_name" : "Doe"
          },
          "encrypted_metadata" : { },
          "avatar" : {
            "original" : "file_url"
          },
          "created_at" : "2018-01-01T00:00:00Z",
          "updated_at" : "2018-01-01T10:00:00Z"
        }
      },
      "UserResponseSchema" : {
        "description" : "The response schema for a user",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/UserSchema"
            }
          },
          "example" : {
            "data" : {
              "object" : "user",
              "id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
              "provider_user_id" : "wijf-fbancomw-dqwjudb",
              "username" : "johndoe",
              "email" : "johndoe@omise.co",
              "metadata" : {
                "first_name" : "John",
                "last_name" : "Doe"
              },
              "encrypted_metadata" : { },
              "avatar" : {
                "original" : "file_url"
              },
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "WalletSchema" : {
        "required" : [ "address", "balances", "object" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "balances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BalanceSchema"
            }
          }
        },
        "description" : "The object schema for a wallet",
        "example" : {
          "object" : "wallet",
          "address" : "123",
          "balances" : [ {
            "object" : "wallet",
            "token" : {
              "object" : "token",
              "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
              "symbol" : "BTC",
              "name" : "Bitcoin",
              "subunit_to_unit" : 100000000000000000
            },
            "amount" : 100
          } ]
        }
      },
      "BalanceSchema" : {
        "required" : [ "amount", "object", "token" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          },
          "amount" : {
            "type" : "number"
          }
        },
        "description" : "The object schema for a balance",
        "example" : {
          "object" : "balance",
          "token" : {
            "object" : "token",
            "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
            "symbol" : "BTC",
            "name" : "Bitcoin",
            "subunit_to_unit" : 100000000000000000
          },
          "amount" : 100
        }
      },
      "WalletResponse" : {
        "required" : [ "account", "account_id", "address", "balances", "encrypted_metadata", "identifier", "metadata", "name", "object", "socket_topic", "user", "user_id" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "socket_topic" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "user_id" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserSchema"
          },
          "account_id" : {
            "type" : "string"
          },
          "account" : {
            "$ref" : "#/components/schemas/AccountSchema"
          },
          "balances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BalanceSchema"
            }
          }
        },
        "description" : "The object schema for a wallet",
        "example" : {
          "data" : {
            "object" : "wallet",
            "socket_topic" : "wallet:XXX123",
            "address" : "XXX123",
            "name" : "primary",
            "identifier" : "primary",
            "metadata" : { },
            "encrypted_metadata" : { },
            "user_id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
            "user" : { },
            "account_id" : null,
            "account" : null,
            "balances" : [ {
              "amount" : 0,
              "token" : {
                "object" : "token",
                "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "symbol" : "BTC",
                "name" : "Bitcoin",
                "subunit_to_unit" : 100000000000000000
              }
            } ]
          }
        }
      },
      "MultipleWalletsResponse" : {
        "description" : "The response schema for a list of multiple wallets (i.e. transfers)",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "object" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/UnpaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/WalletResponse"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "wallet",
                "socket_topic" : "wallet:XXX123",
                "address" : "XXX123",
                "name" : "primary",
                "identifier" : "primary",
                "metadata" : { },
                "encrypted_metadata" : { },
                "user_id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
                "user" : { },
                "account_id" : null,
                "account" : null,
                "balances" : [ {
                  "amount" : 0,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                    "symbol" : "BTC",
                    "name" : "Bitcoin",
                    "subunit_to_unit" : 100000000000000000
                  }
                } ]
              }, {
                "object" : "wallet",
                "socket_topic" : "wallet:XXX456",
                "address" : "XXX456",
                "name" : "primary",
                "identifier" : "primary",
                "metadata" : { },
                "encrypted_metadata" : { },
                "user_id" : "usr_02cbfg6v9thrc3sd9m1v4gazjv",
                "user" : { },
                "account_id" : null,
                "account" : null,
                "balances" : [ {
                  "amount" : 0,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                    "symbol" : "BTC",
                    "name" : "Bitcoin"
                  }
                } ]
              } ]
            }
          }
        } ]
      },
      "AccountSchema" : {
        "required" : [ "avatar", "created_at", "id", "master", "name", "object", "parent_id", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "parent_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "master" : {
            "type" : "boolean"
          },
          "avatar" : {
            "type" : "object"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for an account"
      },
      "TokenSchema" : {
        "required" : [ "name", "object", "subunit_to_unit", "symbol" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "subunit_to_unit" : {
            "type" : "number"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          }
        },
        "description" : "The object schema for a token",
        "example" : {
          "object" : "token",
          "id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
          "symbol" : "OMG",
          "name" : "Mint",
          "subunit_to_unit" : 100000000000000000,
          "metadata" : { },
          "encrypted_metadata" : { }
        }
      },
      "TransactionSchema" : {
        "required" : [ "created_at", "exchange", "from", "id", "idempotency_token", "object", "status", "to", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "from" : {
            "$ref" : "#/components/schemas/TransactionSchema_from"
          },
          "to" : {
            "$ref" : "#/components/schemas/TransactionSchema_from"
          },
          "exchange" : {
            "$ref" : "#/components/schemas/TransactionSchema_exchange"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "comfirmed", "pending", "failed" ]
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a transaction"
      },
      "TransactionResponseSchema" : {
        "description" : "The response schema for a transaction",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/TransactionSchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "transaction",
              "id" : "txn_01cbfg7hq1v0v0fq1csn2w2n29",
              "idempotency_token" : "12345",
              "from" : {
                "object" : "transaction_source",
                "address" : "XXX123",
                "amount" : 1000,
                "token" : {
                  "object" : "token",
                  "id" : "tok_ABC_01cbfg349rb8akcvs7vx20a3g0",
                  "symbol" : "ABC",
                  "name" : "ABC Point",
                  "subunit_to_unit" : 100
                }
              },
              "to" : {
                "object" : "transaction_source",
                "address" : "XXX123",
                "amount" : 1000,
                "token" : {
                  "object" : "token",
                  "id" : "tok_ABC_01cbfg349rb8akcvs7vx20a3g0",
                  "symbol" : "ABC",
                  "name" : "ABC Point",
                  "subunit_to_unit" : 100
                }
              },
              "exchange" : {
                "object" : "exchange",
                "rate" : 1
              },
              "metadata" : { },
              "encrypted_metadata" : { },
              "status" : "confirmed",
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "TransactionsResponseSchema" : {
        "description" : "The response schema for a list of transactions",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TransactionSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "transaction",
                "id" : "txn_01cbfg835e82ywjtzb8qthdtnj",
                "from" : {
                  "object" : "transaction_source",
                  "address" : "XXX123",
                  "amount" : 1000,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_ABC_01cbfg349rb8akcvs7vx20a3g0",
                    "symbol" : "ABC",
                    "name" : "ABC Point",
                    "subunit_to_unit" : 100,
                    "created_at" : "2018-01-01T00:00:00Z",
                    "updated_at" : "2018-01-01T10:00:00Z"
                  }
                },
                "to" : {
                  "object" : "transaction_source",
                  "address" : "XXX123",
                  "amount" : 1000,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_ABC_01cbfg349rb8akcvs7vx20a3g0",
                    "symbol" : "ABC",
                    "name" : "ABC Point",
                    "subunit_to_unit" : 100,
                    "created_at" : "2018-01-01T00:00:00Z",
                    "updated_at" : "2018-01-01T10:00:00Z"
                  }
                },
                "exchange" : {
                  "object" : "exchange",
                  "rate" : 1
                },
                "metadata" : { },
                "encrypted_metadata" : { },
                "status" : "confirmed",
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "SettingResponse" : {
        "description" : "The response schema for settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/SettingResponse_data"
            }
          },
          "example" : {
            "data" : {
              "object" : "setting",
              "tokens" : [ {
                "object" : "token",
                "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "symbol" : "BTC",
                "name" : "Bitcoin",
                "subunit_to_unit" : 100000000000000000
              }, {
                "object" : "token",
                "id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "symbol" : "OMG",
                "name" : "OmiseGO",
                "subunit_to_unit" : 100000000000000000
              } ]
            }
          }
        } ]
      },
      "TransactionRequestResponse" : {
        "description" : "The response schema for a transaction request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "account_id", "address", "allow_amount_override", "amount", "consumption_lifetime", "correlation_id", "created_at", "encrypted_metadata", "expiration_date", "expiration_reason", "expired_at", "formatted_id", "id", "max_consumptions", "max_consumptions_per_user", "metadata", "object", "require_confirmation", "socket_topic", "status", "token", "token_id", "type", "updated_at", "user_id" ],
          "type" : "object",
          "properties" : {
            "object" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "socket_topic" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "send", "receive" ]
            },
            "amount" : {
              "type" : "string"
            },
            "status" : {
              "type" : "string",
              "enum" : [ "valid", "expired" ]
            },
            "correlation_id" : {
              "type" : "string"
            },
            "token_id" : {
              "type" : "string"
            },
            "token" : {
              "type" : "object"
            },
            "address" : {
              "type" : "string"
            },
            "user_id" : {
              "type" : "string"
            },
            "account_id" : {
              "type" : "string"
            },
            "require_confirmation" : {
              "type" : "boolean"
            },
            "max_consumptions" : {
              "type" : "integer",
              "format" : "int32"
            },
            "max_consumptions_per_user" : {
              "type" : "integer",
              "format" : "int32"
            },
            "consumption_lifetime" : {
              "type" : "integer",
              "format" : "int32"
            },
            "expiration_reason" : {
              "type" : "string",
              "enum" : [ "max_consumptions_reached", "expired_transaction_request", "null" ]
            },
            "allow_amount_override" : {
              "type" : "boolean"
            },
            "metadata" : {
              "type" : "object"
            },
            "encrypted_metadata" : {
              "type" : "object"
            },
            "expiration_date" : {
              "type" : "string"
            },
            "expired_at" : {
              "type" : "string"
            },
            "created_at" : {
              "type" : "string"
            },
            "updated_at" : {
              "type" : "string"
            }
          },
          "example" : {
            "data" : {
              "object" : "transaction_request",
              "id" : "txr_01cbfg8mafdnbthgb9e68nd9y9",
              "formatted_id" : "data|txr_01cbfg8mafdnbthgb9e68nd9y9",
              "socket_topic" : "transaction_request:txr_01cbfg8mafdnbthgb9e68nd9y9",
              "type" : "send",
              "amount" : 100,
              "status" : "valid",
              "correlation_id" : "123",
              "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
              "token" : null,
              "address" : "3a560be5-15d1-4463-9ec2-02bc8ded7120",
              "user_id" : "usr_01cbfg922kzmhvw04xvqn17qbd",
              "account_id" : "acc_01cbfg9b5hn05rszm3na8jac7f",
              "require_confirmation" : true,
              "max_consumptions" : 3,
              "max_consumptions_per_user" : null,
              "consumption_lifetime" : 1000,
              "expiration_reason" : null,
              "allow_amount_override" : false,
              "metadata" : { },
              "encrypted_metadata" : { },
              "expiration_date" : "2018-01-01T00:00:00Z",
              "expired_at" : "2018-01-01T00:00:00Z",
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T00:00:00Z"
            }
          }
        } ]
      },
      "TransactionConsumptionResponse" : {
        "description" : "The response schema for a transaction request consumption",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "account", "account_id", "address", "amount", "approved_at", "confirmed_at", "correlation_id", "created_at", "encrypted_metadata", "expiration_date", "expired_at", "failed_at", "id", "idempotency_token", "metadata", "object", "rejected_at", "socket_topic", "status", "token", "token_id", "transaction", "transaction_id", "transaction_request", "transaction_request_id", "updated_at", "user", "user_id" ],
          "type" : "object",
          "properties" : {
            "object" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "socket_topic" : {
              "type" : "string"
            },
            "status" : {
              "type" : "string",
              "enum" : [ "pending", "approved", "rejected", "confirmed", "failed", "expired" ]
            },
            "amount" : {
              "type" : "string"
            },
            "token_id" : {
              "type" : "string"
            },
            "token" : {
              "type" : "object"
            },
            "correlation_id" : {
              "type" : "string"
            },
            "idempotency_token" : {
              "type" : "string"
            },
            "transaction_id" : {
              "type" : "string"
            },
            "transaction" : {
              "type" : "object"
            },
            "user_id" : {
              "type" : "string"
            },
            "user" : {
              "type" : "object"
            },
            "account_id" : {
              "type" : "string"
            },
            "account" : {
              "type" : "object"
            },
            "transaction_request_id" : {
              "type" : "string"
            },
            "transaction_request" : {
              "type" : "object"
            },
            "address" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "object"
            },
            "encrypted_metadata" : {
              "type" : "object"
            },
            "expiration_date" : {
              "type" : "string"
            },
            "created_at" : {
              "type" : "string"
            },
            "updated_at" : {
              "type" : "string"
            },
            "approved_at" : {
              "type" : "string"
            },
            "rejected_at" : {
              "type" : "string"
            },
            "confirmed_at" : {
              "type" : "string"
            },
            "failed_at" : {
              "type" : "string"
            },
            "expired_at" : {
              "type" : "string"
            }
          },
          "example" : {
            "data" : {
              "object" : "transaction_consumption",
              "id" : "txc_01cbfg9qtdken61agxhx6wvj9h",
              "socket_topic" : "transaction_consumption:txc_01cbfg9qtdken61agxhx6wvj9h",
              "status" : "confirmed",
              "amount" : 100,
              "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
              "token" : { },
              "correlation_id" : "7e9c0be5-15d1-4463-9ec2-02bc8ded7120",
              "idempotency_token" : "7831c0be5-15d1-4463-9ec2-02bc8ded7120",
              "transaction_id" : "txn_01cbfga8g0dgwcfc7xh6ks1njt",
              "transaction" : { },
              "user_id" : "usr_01cbfgak47ng6x72vbwjca6j4v",
              "user" : { },
              "account_id" : "acc_01cbfgatsanznvzffqsekta5f0",
              "account" : { },
              "transaction_request_id" : "txr_01cbfgb66cby8wp5wpq6n4pm0h",
              "transaction_request" : { },
              "address" : "5555cer3-15d1-4463-9ec2-02bc8ded7120",
              "metadata" : { },
              "encrypted_metadata" : { },
              "expiration_date" : null,
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T00:00:00Z",
              "approved_at" : "2018-01-01T00:00:00Z",
              "rejected_at" : null,
              "confirmed_at" : "2018-01-01T00:00:00Z",
              "failed_at" : null,
              "expired_at" : null
            }
          }
        } ]
      },
      "PaginatedListSchema_pagination" : {
        "properties" : {
          "per_page" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "current_page" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "is_first_page" : {
            "type" : "boolean"
          },
          "is_last_page" : {
            "type" : "boolean"
          }
        }
      },
      "TransactionSchema_from" : {
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          }
        }
      },
      "TransactionSchema_exchange" : {
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "rate" : {
            "type" : "number"
          }
        }
      },
      "SettingResponse_data" : {
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "tokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TokenSchema"
            }
          }
        }
      }
    },
    "responses" : {
      "AuthenticationTokenResponse" : {
        "description" : "Returns a single authentication token",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticationTokenResponse"
            }
          }
        }
      },
      "UserResponse" : {
        "description" : "Returns a single user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserResponseSchema"
            }
          }
        }
      },
      "TransactionResponse" : {
        "description" : "Returns a single transaction",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionResponseSchema"
            }
          }
        }
      },
      "TransactionsResponse" : {
        "description" : "Returns a list of transactions",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionsResponseSchema"
            }
          }
        }
      },
      "WalletResponse" : {
        "description" : "Returns a single wallet.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WalletResponse"
            }
          }
        }
      },
      "MultipleWalletsResponse" : {
        "description" : "Returns a list of wallets.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MultipleWalletsResponse"
            }
          }
        }
      },
      "TransactionRequestResponse" : {
        "description" : "Transaction request response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionRequestResponse"
            }
          }
        }
      },
      "TransactionConsumptionResponse" : {
        "description" : "Transaction request consumption response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionConsumptionResponse"
            }
          }
        }
      },
      "SettingResponse" : {
        "description" : "Returns a list of settings",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SettingResponse"
            }
          }
        }
      },
      "EmptyResponse" : {
        "description" : "Returns an empty response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BaseResponseSchema"
            }
          }
        }
      },
      "InternalServerError" : {
        "description" : "Returns an internal server error",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponseSchema"
            }
          }
        }
      }
    },
    "requestBodies" : {
      "LoginBody" : {
        "description" : "The parameters to use for logging in a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "password" ],
              "properties" : {
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "password" : {
                  "type" : "string",
                  "format" : "password"
                }
              },
              "example" : {
                "email" : "test@example.com",
                "password" : "the_password"
              }
            }
          }
        },
        "required" : true
      },
      "UserSignupBody" : {
        "description" : "The parameters to use for signing up a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "password", "password_confirmation" ],
              "properties" : {
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "password" : {
                  "type" : "string",
                  "format" : "password"
                },
                "password_confirmation" : {
                  "type" : "string",
                  "format" : "password"
                },
                "verification_url" : {
                  "type" : "string"
                },
                "success_url" : {
                  "type" : "string"
                }
              },
              "example" : {
                "email" : "johndoe@example.com",
                "password" : "password",
                "password_confirmation" : "password",
                "verification_url" : "https://example.com/verify_email?email={email}&token={token}",
                "success_url" : "https://example.com/verify_email/success"
              }
            }
          }
        },
        "required" : true
      },
      "UserVerifyEmailBody" : {
        "description" : "The parameters to use for verifying a user's email",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "token" ],
              "properties" : {
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "example" : {
                "email" : "johndoe@example.com",
                "token" : "some_token_string"
              }
            }
          }
        },
        "required" : true
      },
      "ProviderIdBody" : {
        "description" : "The parameters to use for providing a provider user id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "provider_user_id" ],
              "properties" : {
                "provider_user_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "provider_user_id" : "wijf-fbancomw-dqwjudb"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionsBody" : {
        "description" : "The parameters to use to customize the returned list of transactions.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "seatch_terms" : { },
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : false
      },
      "UserTransactionsBody" : {
        "description" : "The parameters to use to customize the returned list of transactions.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "provider_user_id" ],
              "properties" : {
                "provider_user_id" : {
                  "type" : "string"
                },
                "address" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "provider_user_id" : "sample_provider_id",
                "address" : "address_owned_by_user (optional)",
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "seatch_terms" : { },
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "CurrentUserTransactionsBody" : {
        "description" : "The parameters to use to customize the returned list of transactions.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "provider_user_id" ],
              "properties" : {
                "address" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "address" : "address_owned_by_current_user (optional)",
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "seatch_terms" : { },
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionBody" : {
        "description" : "The parameters for making a transfer from an address to another.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "amount", "from_address", "to_address", "token_id" ],
              "properties" : {
                "from_address" : {
                  "type" : "string"
                },
                "to_address" : {
                  "type" : "string"
                },
                "token_id" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "from_address" : "81e75f46-ee14-4e4c-a1e5-cddcb26dce9c",
                "to_address" : "4aa07691-2f99-4cb1-b36c-50763e2d2ba8",
                "token_id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "amount" : 100,
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "CreateTransactionBody" : {
        "description" : "The parameters for making a transfer.\nThe from_address is optional, if specified it must belong to the current user.\nIf not specified, the user's primary wallet will be used.\n",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "amount", "idempotency_token", "to_address", "token_id" ],
              "properties" : {
                "idempotency_token" : {
                  "type" : "string"
                },
                "from_address" : {
                  "type" : "string"
                },
                "to_address" : {
                  "type" : "string"
                },
                "to_account_id" : {
                  "type" : "string"
                },
                "to_user_id" : {
                  "type" : "string"
                },
                "to_provider_user_id" : {
                  "type" : "string"
                },
                "token_id" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "idempotency_token" : "dfdgr",
                "from_address" : "81e75f46-ee14-4e4c-a1e5-cddcb26dce9c",
                "to_address" : "4aa07691-2f99-4cb1-b36c-50763e2d2ba8",
                "token_id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "amount" : 100,
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "ServerCreateTransactionRequestBody" : {
        "description" : "Create a transaction request using the specified values. That request can then be consumed using a different endpoint to create a transaction from that request.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "token_id", "type" ],
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "send", "receive" ]
                },
                "token_id" : {
                  "type" : "string",
                  "description" : "The token ID to use for the transaction."
                },
                "amount" : {
                  "type" : "integer",
                  "description" : "The amount to transfer. If not specified, the consumption will need to set the amount.",
                  "format" : "int32"
                },
                "correlation_id" : {
                  "type" : "string",
                  "description" : "Optional unique identifier to tie a request with your system.",
                  "default" : "null"
                },
                "account_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "provider_user_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "address" : {
                  "type" : "string",
                  "description" : "If not specified, the current user's primary wallet will be used. If specified, it needs to be one of the account's or user's addresses."
                },
                "require_confirmation" : {
                  "type" : "boolean",
                  "description" : "Indicates if a consumption of the created request needs to be approved before being processed.",
                  "default" : false
                },
                "max_consumptions" : {
                  "type" : "integer",
                  "description" : "The number of times this created request can be consumed.",
                  "format" : "int32"
                },
                "max_consumptions_per_user" : {
                  "type" : "integer",
                  "description" : "The maximum number of times a user can consume the request.",
                  "format" : "int32"
                },
                "consumption_lifetime" : {
                  "type" : "integer",
                  "description" : "The lifetime in milliseconds of how long a consumption can stay 'pending' before being expired. If a consumption is not approved before its expiration date, it will become invalid and be cancelled. This property can be used to avoid stale consumptions blocking the 'max_consumptions' count.",
                  "format" : "int32"
                },
                "expiration_date" : {
                  "type" : "string",
                  "description" : "The datetime at which the created request should expire (no one will be able to consume it anymore). The format is yyyy-MM-dd'T'HH:mm:ssZZZZZ.",
                  "default" : "null"
                },
                "allow_amount_override" : {
                  "type" : "boolean",
                  "description" : "Defines if the amount set in the created request can be overriden in a consumption. Cannot be set to true if the amount property is not set at creation",
                  "default" : true
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "type" : "send",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "amount" : 100,
                "correlation_id" : "123",
                "address" : "2ae52683-68d8-4af6-94d7-5ed4c34ecf1a"
              }
            }
          }
        },
        "required" : true
      },
      "ClientCreateTransactionRequestBody" : {
        "description" : "Create a transaction request using the specified values. That request can then be consumed using a different endpoint by a different client to create a transaction from that request.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "token_id", "type" ],
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "send", "receive" ]
                },
                "token_id" : {
                  "type" : "string",
                  "description" : "The token ID to use for the transaction."
                },
                "amount" : {
                  "type" : "integer",
                  "description" : "The amount to transfer. If not specified, the consumption will need to set the amount.",
                  "format" : "int32"
                },
                "correlation_id" : {
                  "type" : "string",
                  "description" : "Optional unique identifier to tie a request with your system.",
                  "default" : "null"
                },
                "address" : {
                  "type" : "string",
                  "description" : "If not specified, the current user's primary wallet will be used. If specified, it needs to be one of the current user's addresses."
                },
                "require_confirmation" : {
                  "type" : "boolean",
                  "description" : "Indicates if a consumption of the created request needs to be approved before being processed.",
                  "default" : false
                },
                "max_consumptions" : {
                  "type" : "integer",
                  "description" : "The number of times this created request can be consumed.",
                  "format" : "int32"
                },
                "max_consumptions_per_user" : {
                  "type" : "integer",
                  "description" : "The maximum number of times a user can consume the request.",
                  "format" : "int32"
                },
                "consumption_lifetime" : {
                  "type" : "integer",
                  "description" : "The lifetime in milliseconds of how long a consumption can stay 'pending' before being expired. If a consumption is not approved before its expiration date, it will become invalid and be cancelled. This property can be used to avoid stale consumptions blocking the 'max_consumptions' count.",
                  "format" : "int32"
                },
                "expiration_date" : {
                  "type" : "string",
                  "description" : "The datetime at which the created request should expire (no one will be able to consume it anymore). The format is yyyy-MM-dd'T'HH:mm:ssZZZZZ.",
                  "default" : "null"
                },
                "allow_amount_override" : {
                  "type" : "boolean",
                  "description" : "Defines if the amount set in the created request can be overriden in a consumption. Cannot be set to true if the amount property is not set at creation",
                  "default" : true
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "type" : "send",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "amount" : 100,
                "correlation_id" : "123",
                "address" : "2ae52683-68d8-4af6-94d7-5ed4c34ecf1a"
              }
            }
          }
        },
        "required" : true
      },
      "GetTransactionRequestBody" : {
        "description" : "Get a transaction request using the specified ID.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "formatted_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "formatted_id" : "data|txr_01cbfgc8cmmyzy1cfzpqwme3ey"
              }
            }
          }
        },
        "required" : true
      },
      "ServerConsumeTransactionRequestBody" : {
        "description" : "Consume a transaction request using the specified values.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "formatted_transaction_request_id" ],
              "properties" : {
                "formatted_transaction_request_id" : {
                  "type" : "string"
                },
                "correlation_id" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "token_id" : {
                  "type" : "string"
                },
                "account_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "provider_user_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "address" : {
                  "type" : "string",
                  "description" : "If not specified, the current user's primary wallet will be used. If specified, it needs to be one of the account's or user's addresses."
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "formatted_transaction_request_id" : "txr_01cbfgcts5kqfgpqxcxn71rnbs",
                "correlation_id" : "123",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "amount" : 100,
                "provider_user_id" : "provider_user_id01",
                "address" : "2ae52683-68d8-4af6-94d7-5ed4c34ecf1a",
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "ClientConsumeTransactionRequestBody" : {
        "description" : "Consume a transaction request using the specified values.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "formatted_transaction_request_id", "idempotency_token" ],
              "properties" : {
                "idempotency_token" : {
                  "type" : "string"
                },
                "formatted_transaction_request_id" : {
                  "type" : "string"
                },
                "correlation_id" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "token_id" : {
                  "type" : "string"
                },
                "address" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "idempotency_token" : "3unr3u3",
                "formatted_transaction_request_id" : "txn_01cbfg5m2ee06kzm8tbysfmmw5",
                "correlation_id" : "123",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "amount" : 100,
                "address" : "2ae52683-68d8-4af6-94d7-5ed4c34ecf1a",
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "ConsumptionConfirmationRequestBody" : {
        "description" : "Approve or reject a consumption using the specified ID.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "txn_01cbfg5m2ee06kzm8tbysfmmw5"
              }
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "ClientAuth" : {
        "type" : "apiKey",
        "description" : "OMGClient Base64(api_key:authentication_token)",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}