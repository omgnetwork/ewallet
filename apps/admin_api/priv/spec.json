{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "eWallet Admin API",
    "description" : "This is the documentation for eWallet Admin API.\n\nAll calls must be user-authenticated or provider-authenticated. That is, the client must first authenticate with the API using the user's email and password. On successful authentication, the API returns an authentication token (i.e. `authentication_token`).\nOnce a valid `authentication_token` is received, use the given auth token to make subsequent calls to the API via HTTP header:\n``` Authorization=OMGAdmin Base64(user_id:authentication_token) ```\nAn access/secret keys combination can be used as well.\n``` Authorization=OMGProvider Base64(access_key:secret_key) ```\nDue to HTTP-RPC nature, the API will always return a `200` HTTP status, including on errors. Only in case of an internal server error that `500` will be returned.\n\nError codes are available in [html](./errors), [json](./errors.json) and [yaml](./errors.yaml) formats.\n",
    "contact" : {
      "name" : "OmiseGO",
      "email" : "thibault@omisego.co"
    },
    "license" : {
      "name" : "Apache 2.0: https://www.apache.org/licenses/LICENSE-2.0",
      "url" : "https://omisego.network/"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/api/admin"
  } ],
  "tags" : [ {
    "name" : "AdminSession",
    "description" : "Resources related to admin session tokens."
  }, {
    "name" : "Admin",
    "description" : "Resources related to admin users."
  }, {
    "name" : "UserSession",
    "description" : "Resources related to user session tokens."
  }, {
    "name" : "User",
    "description" : "Resources related to users."
  }, {
    "name" : "Token",
    "description" : "Resources related to tokens."
  }, {
    "name" : "ExchangePair",
    "description" : "Resources related to exchange pairs."
  }, {
    "name" : "Category",
    "description" : "Resources related to categories."
  }, {
    "name" : "Account",
    "description" : "Resources related to accounts."
  }, {
    "name" : "Wallet",
    "description" : "Resources related to wallets."
  }, {
    "name" : "Transaction",
    "description" : "Resources related to transactions."
  }, {
    "name" : "TransactionRequest",
    "description" : "Resources related to the creation of transaction requests (either receiving or sending) that needs to be consumed by another user."
  }, {
    "name" : "TransactionConsumption",
    "description" : "Resources related to consumption of transaction requests."
  }, {
    "name" : "API Access",
    "description" : "Resources related to API access."
  } ],
  "paths" : {
    "/admin.login" : {
      "post" : {
        "tags" : [ "AdminSession" ],
        "summary" : "Login an existing admin user using email and password.",
        "operationId" : "login",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/LoginBody"
        },
        "responses" : {
          "200" : {
            "description" : "Authentication token response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationTokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.logout" : {
      "post" : {
        "tags" : [ "AdminSession" ],
        "summary" : "Expires a user's authentication_token.",
        "operationId" : "logout",
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/auth_token.switch_account" : {
      "post" : {
        "tags" : [ "AdminSession" ],
        "summary" : "Switch the current account associated with the auth token.",
        "operationId" : "switch_account",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SwitchAccountBody"
        },
        "responses" : {
          "200" : {
            "description" : "Authentication token response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationTokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/admin.reset_password" : {
      "post" : {
        "tags" : [ "AdminSession" ],
        "summary" : "Sends an email containing a link to reset the password.",
        "operationId" : "password_reset",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResetPasswordBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/admin.update_password" : {
      "post" : {
        "tags" : [ "AdminSession" ],
        "summary" : "Reset the password for a specific token with the provided new password.",
        "operationId" : "password_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePasswordBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/user.login" : {
      "post" : {
        "tags" : [ "UserSession" ],
        "summary" : "Login an existing user. The provider can call this to get an authentication token for a specific user.",
        "operationId" : "user_login",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserIdentifierBody"
        },
        "responses" : {
          "200" : {
            "description" : "Authentication token response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticationTokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.logout" : {
      "post" : {
        "tags" : [ "UserSession" ],
        "summary" : "Expires a user's authentication_token.",
        "operationId" : "user_logout",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/LogoutUserBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/token.all" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Get the list of tokens",
        "operationId" : "token_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of tokens",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokensResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        }, {
          "ProviderAuth" : [ ]
        } ]
      }
    },
    "/token.get" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Get a specific token",
        "operationId" : "token_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single tokens",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/token.create" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Create a new token",
        "operationId" : "token_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenCreateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single tokens",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/token.update" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Update an existing token",
        "operationId" : "token_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single tokens",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/token.stats" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Get the statistics for a token",
        "operationId" : "token_stats",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenStatsBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns the stats for a single token",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenStatsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/token.get_mints" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Get the list of mints for a token",
        "operationId" : "token_get_mints",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenGetMintsBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of mints",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MintsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/token.mint" : {
      "post" : {
        "tags" : [ "Token" ],
        "summary" : "Mint an existing token",
        "operationId" : "token_mint",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TokenMintBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single tokens",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/exchange_pair.all" : {
      "post" : {
        "tags" : [ "ExchangePair" ],
        "summary" : "Get the list of exchange pairs",
        "operationId" : "exchange_pair_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ExchangePairAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of exchange pairs",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangePairsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/exchange_pair.get" : {
      "post" : {
        "tags" : [ "ExchangePair" ],
        "summary" : "Get the a specific exchange pair by its id",
        "operationId" : "exchange_pair_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ExchangePairGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single exchange pair",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangePairResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/exchange_pair.create" : {
      "post" : {
        "tags" : [ "ExchangePair" ],
        "summary" : "Create a new exchange pair",
        "operationId" : "exchange_pair_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ExchangePairCreateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of exchange pairs",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangePairsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/exchange_pair.update" : {
      "post" : {
        "tags" : [ "ExchangePair" ],
        "summary" : "Update an existing exchange pair by its id",
        "operationId" : "exchange_pair_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ExchangePairUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of exchange pairs",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangePairsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/exchange_pair.delete" : {
      "post" : {
        "tags" : [ "ExchangePair" ],
        "summary" : "Delete an exchange pair by its id",
        "operationId" : "exchange_pair_delete",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ExchangePairDeleteBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of exchange pairs",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangePairsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/category.all" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Get the list of categories",
        "operationId" : "category_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CategoryAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of categories",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoriesResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/category.get" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Get a specific category",
        "operationId" : "category_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CategoryGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single category",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/category.create" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Create a new category",
        "operationId" : "category_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CategoryCreateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single category",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/category.update" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Update a category",
        "operationId" : "category_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CategoryUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single category",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/category.delete" : {
      "post" : {
        "tags" : [ "Category" ],
        "summary" : "Delete a category",
        "operationId" : "category_delete",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CategoryDeleteBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single category",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.all" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Get the list of accounts",
        "operationId" : "account_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of accounts",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Get a specific account",
        "operationId" : "account_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single account",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.create" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Create a new account",
        "operationId" : "account_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountCreateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single account",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.update" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Update an account",
        "operationId" : "account_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single account",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.upload_avatar" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Uploads avatar for an account",
        "operationId" : "account_upload_avatar",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountUploadBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single account",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.assign_user" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Assigns a user to an account with a role",
        "operationId" : "account_assign_user",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountAssignUserBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.unassign_user" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Unassigns a user from an account",
        "operationId" : "account_unassign_user",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountUnassignUserBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_members" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "List the admins that are currently assigned to the given acount",
        "operationId" : "account_get_members",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountListBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of members",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MembersResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_users" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "List the users that are linked with the given account",
        "operationId" : "account_get_users",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountListBodyWithOwned"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of users",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_descendants" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Get the list of descendants for the given account",
        "operationId" : "account_get_descantants",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of accounts",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_wallets" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Get the list of wallets for the given account",
        "operationId" : "account_get_wallets",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountListBodyWithOwned"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of wallets",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WalletsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_transactions" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "List the transactions for the current account",
        "operationId" : "account_get_transactions",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountListBodyWithOwned"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transactions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_transaction_requests" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "List the transaction requests for the current account",
        "operationId" : "account_get_transaction_requests",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountListBodyWithOwned"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction requests",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionRequestsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/account.get_transaction_consumptions" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "List the transaction consumptions for the current account",
        "operationId" : "account_get_transaction_consumptions",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccountListBodyWithOwned"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction consumptions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/admin.all" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Get the list of admins",
        "operationId" : "admin_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AdminAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of admin panel users",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/admin.get" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Get a specific admin",
        "operationId" : "admin_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AdminGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single admin panel user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/invite.accept" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Accepts an invite",
        "operationId" : "invite_accept",
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ClientAuth" : [ ]
        } ]
      }
    },
    "/me.get" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Get the user corresponding to the provided authentication header.",
        "operationId" : "me_get",
        "responses" : {
          "200" : {
            "description" : "Returns a single admin panel user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/me.update" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Update the user with the provided parameters",
        "operationId" : "me_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AdminUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/me.upload_avatar" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Uploads avatar for an admin",
        "operationId" : "admin_upload_avatar",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AdminUploadBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single admin panel user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/me.get_account" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Get the one upper-most account that the user has membership in.",
        "operationId" : "me_get_account",
        "responses" : {
          "200" : {
            "description" : "Returns a single account",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/me.get_accounts" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Get the list of account and sub-accounts that the user has membership in.",
        "operationId" : "me_get_accounts",
        "responses" : {
          "200" : {
            "description" : "Returns a list of accounts",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.all" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Get the list of users",
        "operationId" : "user_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of users",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.create" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create a new user",
        "operationId" : "user_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.update" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Update an existing user",
        "operationId" : "user_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.get" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Get a specific user",
        "operationId" : "user_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserIdentifierBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single user",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.get_wallets" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Get the list of wallets for the given user",
        "operationId" : "user_wallet_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserIdentifierWithFiltersBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of wallets",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WalletsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/user.get_transactions" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Get the list of transactions for the given user",
        "operationId" : "get_all_transactions_for_user",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserIdentifierWithFiltersBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transactions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/wallet.all" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Get the list of wallets",
        "operationId" : "wallet_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WalletAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of wallets",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WalletsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/wallet.create" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Create a wallet",
        "operationId" : "wallet_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WalletCreateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single wallet",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WalletResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/wallet.get" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Get a specific wallet",
        "operationId" : "wallet_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WalletGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single wallet",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WalletResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction.all" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Get the list of transactions",
        "operationId" : "transaction_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transactions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction.get" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Get the a specific transaction by its id",
        "operationId" : "transaction_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionGetBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single transaction",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction.create" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Create a new transaction",
        "operationId" : "transaction_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionCreateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single transaction",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction.calculate" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Calculates transaction amounts",
        "operationId" : "transaction_calculate",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionCalculateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a transaction calculation",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionCalculationResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_request.all" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Get the list of transaction requests",
        "operationId" : "transaction_request_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionRequestAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction requests",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionRequestsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_request.create" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Create a new transaction request.",
        "description" : "This is a server call only.",
        "operationId" : "transaction_request_create",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionRequestSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        } ]
      }
    },
    "/transaction_request.get" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Get a transaction request.",
        "description" : "This is a server call only.",
        "operationId" : "transaction_request_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/GetTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionRequestSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        } ]
      }
    },
    "/transaction_request.consume" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Consume a transaction request.",
        "description" : "This is a server call only.",
        "operationId" : "transaction_request_consume",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConsumeTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        } ]
      }
    },
    "/user.get_transaction_consumptions" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Get the list of transaction consumptions for a user",
        "operationId" : "user_get_consumptions",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserIdentifierWithFiltersBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction consumptions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/wallet.get_transaction_consumptions" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Get the list of transaction consumptions for a wallet",
        "operationId" : "wallet_get_consumptions",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionConsumptionAllForWalletBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction consumptions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_request.get_transaction_consumptions" : {
      "post" : {
        "tags" : [ "TransactionRequest" ],
        "summary" : "Get the list of transaction consumptions for a transaction request",
        "operationId" : "transaction_request_get_consumptions",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionConsumptionAllForTransactionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction consumptions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_consumption.all" : {
      "post" : {
        "tags" : [ "TransactionConsumption" ],
        "summary" : "Get the list of transaction consumptions",
        "operationId" : "transaction_consumption_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionConsumptionAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of transaction consumptions",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionsResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_consumption.get" : {
      "post" : {
        "tags" : [ "TransactionConsumption" ],
        "summary" : "Get a consumption.",
        "description" : "This is a server call only.",
        "operationId" : "transaction_consumption_get",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/GetConsumptionRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_consumption.approve" : {
      "post" : {
        "tags" : [ "TransactionConsumption" ],
        "summary" : "Approve a consumption.",
        "description" : "This is a server call only.",
        "operationId" : "transaction_consumption_approve",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConsumptionConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/transaction_consumption.reject" : {
      "post" : {
        "tags" : [ "TransactionConsumption" ],
        "summary" : "Reject a consumption.",
        "description" : "This is a server call only.",
        "operationId" : "transaction_consumption_reject",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConsumptionConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "Transaction request consumption response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransactionConsumptionSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/access_key.all" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Get the list of access and secret keys",
        "operationId" : "access_key_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccessKeyAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of access keys",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeysResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/access_key.create" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Create a pair of access and secret keys",
        "operationId" : "access_key_create",
        "responses" : {
          "200" : {
            "description" : "Returns a single access key",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeyResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/access_key.update" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Update a pair of access and secret keys by its id",
        "operationId" : "access_key_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccessKeyUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single access key",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeyResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/access_key.delete" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Delete a pair of access and secret keys by its id or access key",
        "operationId" : "access_key_delete",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AccessKeyDeleteBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/api_key.all" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Get the list of API keys",
        "operationId" : "api_key_all",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/APIKeyAllBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a list of API keys",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIKeysResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/api_key.create" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Create an API key",
        "operationId" : "api_key_create",
        "responses" : {
          "200" : {
            "description" : "Returns a single API key",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIKeyResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/api_key.update" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Update an API key",
        "operationId" : "api_key_update",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/APIKeyUpdateBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns a single API key",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIKeyResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/api_key.delete" : {
      "post" : {
        "tags" : [ "API Access" ],
        "summary" : "Delete an API key by its id",
        "operationId" : "api_key_delete",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/APIKeyDeleteBody"
        },
        "responses" : {
          "200" : {
            "description" : "Returns an empty response",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    },
    "/settings.all" : {
      "post" : {
        "tags" : [ "Setting" ],
        "summary" : "Get the global settings.",
        "operationId" : "settings_all",
        "responses" : {
          "200" : {
            "description" : "Returns a list of settings",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Returns an internal server error",
            "content" : {
              "application/vnd.omisego.v1+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          }
        },
        "security" : [ {
          "ProviderAuth" : [ ]
        }, {
          "AdminAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "BaseResponseSchema" : {
        "required" : [ "data", "success", "version" ],
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "success" : {
            "type" : "boolean"
          },
          "data" : {
            "type" : "object"
          }
        },
        "description" : "The response schema for a successful operation",
        "example" : {
          "version" : "1",
          "success" : true,
          "data" : { }
        }
      },
      "UnpaginatedListSchema" : {
        "required" : [ "data", "object" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "description" : "The object schema for an unpaginated list",
        "example" : {
          "object" : "list",
          "data" : [ ]
        }
      },
      "PaginatedListSchema" : {
        "required" : [ "data", "object", "pagination" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "pagination" : {
            "required" : [ "current_page", "is_first_page", "is_last_page", "per_page" ],
            "type" : "object",
            "properties" : {
              "per_page" : {
                "minimum" : 1,
                "type" : "integer",
                "format" : "int32"
              },
              "current_page" : {
                "minimum" : 1,
                "type" : "integer",
                "format" : "int32"
              },
              "is_first_page" : {
                "type" : "boolean"
              },
              "is_last_page" : {
                "type" : "boolean"
              }
            },
            "items" : {
              "type" : "object"
            }
          }
        },
        "description" : "The object schema for a paginated list",
        "example" : {
          "object" : "list",
          "data" : [ ],
          "pagination" : {
            "per_page" : 10,
            "current_page" : 1,
            "is_first_page" : true,
            "is_last_page" : true
          }
        }
      },
      "ErrorSchema" : {
        "required" : [ "code", "description", "messages", "object" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "messages" : {
            "type" : "object"
          }
        },
        "description" : "The object schema for an error",
        "example" : {
          "object" : "error",
          "code" : "server:internal_server_error",
          "description" : "Something went wrong on the server",
          "messages" : {
            "error_key" : "error_reason"
          }
        }
      },
      "ErrorResponseSchema" : {
        "description" : "The response schema for an error",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/ErrorSchema"
            }
          },
          "example" : {
            "success" : false,
            "data" : {
              "object" : "error",
              "code" : "server:internal_server_error",
              "description" : "Something went wrong on the server",
              "messages" : {
                "error_key" : "error_reason"
              }
            }
          }
        } ]
      },
      "AuthenticationTokenSchema" : {
        "required" : [ "account", "account_id", "authentication_token", "master_admin", "object", "role", "user", "user_id" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "authentication_token" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserSchema"
          },
          "account_id" : {
            "type" : "string"
          },
          "master_admin" : {
            "type" : "boolean"
          },
          "account" : {
            "$ref" : "#/components/schemas/AccountSchema"
          },
          "role" : {
            "type" : "string"
          }
        },
        "description" : "The object schema for an authentication token"
      },
      "AuthenticationTokenResponseSchema" : {
        "description" : "The response schema for an authentication token",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/AuthenticationTokenSchema"
            }
          },
          "example" : {
            "data" : {
              "object" : "authentication_token",
              "authentication_token" : "azJRj09l7jvR8KhTqUs3",
              "user_id" : "usr_01cc02x0v98qcctvycfx4vsk8x",
              "user" : {
                "object" : "user",
                "id" : "usr_01cc02x0v98qcctvycfx4vsk8x",
                "provider_user_id" : "wijf-fbancomw-dqwjudb",
                "username" : "johndoe",
                "email" : "johndoe@omise.co",
                "metadata" : {
                  "first_name" : "John",
                  "last_name" : "Doe"
                },
                "encrypted_metadata" : {
                  "something" : "secret"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              },
              "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
              "account" : {
                "object" : "account",
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "parent_id" : "acc_01ca26pkge49aabzd6k6mshn0y",
                "name" : "Account Name",
                "description" : "The account description",
                "master" : true,
                "metadata" : { },
                "encrypted_metadata" : { },
                "avatar" : {
                  "original" : "file_url"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              },
              "master_admin" : true,
              "role" : "admin"
            }
          }
        } ]
      },
      "TokenSchema" : {
        "required" : [ "created_at", "id", "name", "object", "subunit_to_unit", "symbol", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "subunit_to_unit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          }
        },
        "description" : "The object schema for a token"
      },
      "TokenResponseSchema" : {
        "description" : "The response schema for a token",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/TokenSchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "token",
              "id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3",
              "symbol" : "ABC",
              "name" : "ABC Point",
              "subunit_to_unit" : 100,
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "TokensResponseSchema" : {
        "description" : "The response schema for a list of tokens",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TokenSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "token",
                "id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3",
                "symbol" : "ABC",
                "name" : "ABC Point",
                "subunit_to_unit" : 100,
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "TokenStatsResponseSchema" : {
        "required" : [ "object", "token", "token_id", "total_supply" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "token_id" : {
            "type" : "string"
          },
          "token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          },
          "total_supply" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "The object schema for token stats",
        "example" : {
          "version" : "1",
          "success" : true,
          "data" : {
            "object" : "token_stats",
            "total_supply" : 100000,
            "token_id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3",
            "token" : {
              "object" : "token",
              "id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3",
              "symbol" : "ABC",
              "name" : "ABC Point",
              "subunit_to_unit" : 100,
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        }
      },
      "MintSchema" : {
        "required" : [ "account", "account_id", "amount", "confirmed", "created_at", "description", "id", "object", "token", "token_id", "transaction", "transaction_id", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "confirmed" : {
            "type" : "boolean"
          },
          "token_id" : {
            "type" : "string"
          },
          "token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          },
          "account_id" : {
            "type" : "string"
          },
          "account" : {
            "$ref" : "#/components/schemas/AccountSchema"
          },
          "transaction_id" : {
            "type" : "string"
          },
          "transaction" : {
            "$ref" : "#/components/schemas/TransactionSchema"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a mint"
      },
      "MintsResponseSchema" : {
        "description" : "The response schema for a list of mints",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/MintSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "mint",
                "id" : "mnt_01xbfge9qhmsdbjyb7a8e8pxt3",
                "description" : "Some description",
                "amount" : 10000,
                "confirmed" : true,
                "token_id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3",
                "token" : { },
                "account_id" : "acc_01rebfge9qhmsdbjyb7a8e8pxt",
                "account" : { },
                "transaction_id" : "tfr_01trbfge9qhmsdbjyb7a8e8pxt",
                "transaction" : { },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T00:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "ExchangePairSchema" : {
        "required" : [ "created_at", "from_token", "from_token_id", "id", "name", "object", "rate", "to_token", "to_token_id", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "from_token_id" : {
            "type" : "string"
          },
          "from_token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          },
          "to_token_id" : {
            "type" : "string"
          },
          "to_token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          },
          "rate" : {
            "type" : "number"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        },
        "description" : "The object schema for an exchange pair"
      },
      "ExchangePairResponseSchema" : {
        "description" : "The response schema for an exchange pair",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/ExchangePairSchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "exchange_pair",
              "id" : "exg_01cgvppyrz2pprj6s0zmc26p2p",
              "name" : "ETH/OMG",
              "from_token_id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
              "from_token" : {
                "object" : "token",
                "id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                "symbol" : "ABC",
                "name" : "Ethereum",
                "subunit_to_unit" : 100,
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              },
              "to_token_id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
              "to_token" : {
                "object" : "token",
                "id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
                "symbol" : "OMG",
                "name" : "OmiseGO",
                "subunit_to_unit" : 100,
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              },
              "rate" : 0.017,
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z",
              "deleted_at" : null
            }
          }
        } ]
      },
      "ExchangePairsResponseSchema" : {
        "description" : "The response schema for a list of exchange pairs",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/ExchangePairSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "exchange_pair",
                "id" : "exg_01cgvppyrz2pprj6s0zmc26p2p",
                "name" : "ETH/OMG",
                "from_token_id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                "from_token" : {
                  "object" : "token",
                  "id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                  "symbol" : "ABC",
                  "name" : "Ethereum",
                  "subunit_to_unit" : 100,
                  "created_at" : "2018-01-01T00:00:00Z",
                  "updated_at" : "2018-01-01T10:00:00Z"
                },
                "to_token_id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
                "to_token" : {
                  "object" : "token",
                  "id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
                  "symbol" : "OMG",
                  "name" : "OmiseGO",
                  "subunit_to_unit" : 100,
                  "created_at" : "2018-01-01T00:00:00Z",
                  "updated_at" : "2018-01-01T10:00:00Z"
                },
                "rate" : 0.017,
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z",
                "deleted_at" : null
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "CategorySchema" : {
        "required" : [ "account_ids", "created_at", "description", "id", "name", "object", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "account_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "accounts" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/UnpaginatedListSchema"
            }, {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AccountSchema"
                  }
                }
              }
            } ]
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a category"
      },
      "CategoryResponseSchema" : {
        "description" : "The response schema for an category",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/CategorySchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "category",
              "id" : "cat_01ce31n493dqbtj3fe8hadwndx",
              "name" : "Category Name",
              "description" : "The category description",
              "account_ids" : [ ],
              "accounts" : [ ],
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "CategoriesResponseSchema" : {
        "description" : "The response schema for a list of categories",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CategorySchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "category",
                "id" : "cat_01ce31n493dqbtj3fe8hadwndx",
                "name" : "Category Name",
                "description" : "The category description",
                "account_ids" : [ ],
                "accounts" : [ ],
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "AccountSchema" : {
        "required" : [ "avatar", "category_ids", "created_at", "id", "master", "name", "object", "parent_id", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "parent_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "master" : {
            "type" : "boolean"
          },
          "avatar" : {
            "type" : "object"
          },
          "category_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "categories" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/UnpaginatedListSchema"
            }, {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategorySchema"
                  }
                }
              }
            } ]
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for an account"
      },
      "AccountResponseSchema" : {
        "description" : "The response schema for an account",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/AccountSchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "account",
              "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
              "parent_id" : "acc_01ca26pkge49aabzd6k6mshn0y",
              "name" : "Account Name",
              "description" : "The account description",
              "master" : true,
              "category_ids" : [ ],
              "categories" : [ ],
              "metadata" : { },
              "encrypted_metadata" : { },
              "avatar" : {
                "original" : "file_url"
              },
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "AccountsResponseSchema" : {
        "description" : "The response schema for a list of accounts",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AccountSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "account",
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "parent_id" : "acc_01ca26pkge49aabzd6k6mshn0y",
                "name" : "Account name",
                "description" : "The account description",
                "master" : true,
                "category_ids" : [ ],
                "categories" : [ ],
                "metadata" : { },
                "encrypted_metadata" : { },
                "avatar" : {
                  "original" : "file_url"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "MemberSchema" : {
        "required" : [ "created_at", "id", "object", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "provider_user_id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "avatar" : {
            "type" : "object"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "role" : {
            "type" : "string"
          },
          "account" : {
            "$ref" : "#/components/schemas/AccountSchema"
          }
        },
        "description" : "The object schema for an account member",
        "example" : {
          "object" : "user",
          "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
          "provider_user_id" : "wijf-fbancomw-dqwjudb",
          "username" : "johndoe",
          "email" : "johndoe@omise.co",
          "metadata" : {
            "first_name" : "John",
            "last_name" : "Doe"
          },
          "encrypted_metadata" : {
            "something" : "secret"
          },
          "avatar" : {
            "original" : "file_url"
          },
          "created_at" : "2018-01-01T00:00:00Z",
          "updated_at" : "2018-01-01T10:00:00Z",
          "account" : { },
          "role" : "admin"
        }
      },
      "UserSchema" : {
        "required" : [ "created_at", "id", "object", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "provider_user_id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "avatar" : {
            "type" : "object"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a user",
        "example" : {
          "object" : "user",
          "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
          "provider_user_id" : "wijf-fbancomw-dqwjudb",
          "username" : "johndoe",
          "email" : "johndoe@omise.co",
          "metadata" : {
            "first_name" : "John",
            "last_name" : "Doe"
          },
          "encrypted_metadata" : {
            "something" : "secret"
          },
          "avatar" : {
            "original" : "file_url"
          },
          "created_at" : "2018-01-01T00:00:00Z",
          "updated_at" : "2018-01-01T10:00:00Z"
        }
      },
      "UserResponseSchema" : {
        "description" : "The response schema for a user",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/UserSchema"
            }
          },
          "example" : {
            "data" : {
              "object" : "user",
              "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
              "provider_user_id" : "wijf-fbancomw-dqwjudb",
              "username" : "johndoe",
              "email" : "johndoe@omise.co",
              "metadata" : {
                "first_name" : "John",
                "last_name" : "Doe"
              },
              "encrypted_metadata" : {
                "something" : "secret"
              },
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "MembersResponseSchema" : {
        "description" : "The response schema for a list of members",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/MemberSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "user",
                "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
                "provider_user_id" : null,
                "username" : "johndoe",
                "email" : "johndoe@omise.co",
                "metadata" : {
                  "first_name" : "John",
                  "last_name" : "Doe"
                },
                "encrypted_metadata" : {
                  "something" : "secret"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z",
                "role" : "admin",
                "account" : { }
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "UsersResponseSchema" : {
        "description" : "The response schema for a list of users",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UserSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "user",
                "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
                "provider_user_id" : "wijf-fbancomw-dqwjudb",
                "username" : "johndoe",
                "email" : "johndoe@omise.co",
                "metadata" : {
                  "first_name" : "John",
                  "last_name" : "Doe"
                },
                "encrypted_metadata" : {
                  "something" : "secret"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "WalletSchema" : {
        "required" : [ "account", "account_id", "address", "balances", "encrypted_metadata", "identifier", "metadata", "name", "object", "socket_topic", "user", "user_id" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "socket_topic" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "user_id" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserSchema"
          },
          "account_id" : {
            "type" : "string"
          },
          "account" : {
            "$ref" : "#/components/schemas/AccountSchema"
          },
          "balances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BalanceSchema"
            }
          }
        },
        "description" : "The object schema for a wallet",
        "example" : {
          "data" : {
            "object" : "wallet",
            "socket_topic" : "wallet:XXX123",
            "address" : "XXX123",
            "name" : "primary",
            "identifier" : "primary",
            "metadata" : { },
            "encrypted_metadata" : { },
            "user_id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
            "user" : { },
            "account_id" : null,
            "account" : null,
            "balances" : [ {
              "amount" : 0,
              "token" : {
                "object" : "token",
                "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "symbol" : "BTC",
                "name" : "Bitcoin",
                "subunit_to_unit" : 100000000000000000
              }
            } ]
          }
        }
      },
      "BalanceSchema" : {
        "required" : [ "amount", "object", "token" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          },
          "amount" : {
            "type" : "number"
          }
        },
        "description" : "The object schema for a balance",
        "example" : {
          "object" : "balance",
          "token" : {
            "object" : "token",
            "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
            "symbol" : "BTC",
            "name" : "Bitcoin",
            "subunit_to_unit" : 100000000000000000
          },
          "amount" : 100
        }
      },
      "WalletResponseSchema" : {
        "description" : "The response schema for a wallet",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/WalletSchema"
            }
          },
          "example" : {
            "data" : {
              "object" : "wallet",
              "socket_topic" : "wallet:XXX123",
              "address" : "XXX123",
              "name" : "primary",
              "identifier" : "primary",
              "metadata" : { },
              "encrypted_metadata" : { },
              "user_id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
              "user" : { },
              "account_id" : null,
              "account" : null,
              "balances" : [ {
                "amount" : 0,
                "token" : {
                  "object" : "token",
                  "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                  "symbol" : "BTC",
                  "name" : "Bitcoin",
                  "subunit_to_unit" : 100000000000000000
                }
              } ]
            }
          }
        } ]
      },
      "WalletsResponseSchema" : {
        "description" : "The response schema for a list of wallets",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/WalletSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "wallet",
                "socket_topic" : "wallet:XXX123",
                "address" : "XXX123",
                "name" : "primary",
                "identifier" : "primary",
                "metadata" : { },
                "encrypted_metadata" : { },
                "user_id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv",
                "user" : { },
                "account_id" : null,
                "account" : null,
                "balances" : [ {
                  "amount" : 0,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                    "symbol" : "BTC",
                    "name" : "Bitcoin",
                    "subunit_to_unit" : 100000000000000000
                  }
                } ]
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "AdminResponseSchema" : {
        "description" : "The response schema for an admin user",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/UserSchema"
            }
          },
          "example" : {
            "data" : {
              "object" : "user",
              "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
              "provider_user_id" : "wijf-fbancomw-dqwjudb",
              "username" : "johndoe",
              "email" : "johndoe@omise.co",
              "metadata" : {
                "first_name" : "John",
                "last_name" : "Doe"
              },
              "encrypted_metadata" : {
                "something" : "secret"
              },
              "avatar" : {
                "original" : "file_url"
              },
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "AdminsResponseSchema" : {
        "description" : "The response schema for a list of admin users",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UserSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "user",
                "id" : "usr_01ce83zf80j542z4q4zqd8qvfx",
                "provider_user_id" : "wijf-fbancomw-dqwjudb",
                "username" : "johndoe",
                "email" : "johndoe@omise.co",
                "metadata" : {
                  "first_name" : "John",
                  "last_name" : "Doe"
                },
                "encrypted_metadata" : {
                  "something" : "secret"
                },
                "avatar" : {
                  "original" : "file_url"
                },
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "TransactionSchema" : {
        "required" : [ "created_at", "exchange", "from", "id", "idempotency_token", "object", "status", "to", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "from" : {
            "$ref" : "#/components/schemas/TransactionSchema_from"
          },
          "to" : {
            "$ref" : "#/components/schemas/TransactionSchema_from"
          },
          "exchange" : {
            "$ref" : "#/components/schemas/TransactionSchema_exchange"
          },
          "metadata" : {
            "type" : "object"
          },
          "encrypted_metadata" : {
            "type" : "object"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "comfirmed", "pending", "failed" ]
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a transaction"
      },
      "TransactionResponseSchema" : {
        "description" : "The response schema for a transaction",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/TransactionSchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "transaction",
              "id" : "txn_01ce840q5svw6058r8yk6jzf65",
              "idempotency_token" : "123982f5-4a27-498d-a91b-7bb2e2a8d3d1",
              "from" : {
                "object" : "transaction_source",
                "address" : "bec66785-f0d8-416c-a650-2859aa680166",
                "amount" : 1000,
                "token" : {
                  "object" : "token",
                  "id" : "tok_ABC_01cbfge9qhmsdbjyb7a8e8pxt3",
                  "symbol" : "ABC",
                  "name" : "ABC Point",
                  "subunit_to_unit" : 100,
                  "created_at" : "2018-01-01T00:00:00Z",
                  "updated_at" : "2018-01-01T10:00:00Z"
                }
              },
              "to" : {
                "object" : "transaction_source",
                "address" : "47218ab4-d94f-44e9-b7f2-36061f76ce58",
                "amount" : 1000,
                "token" : {
                  "object" : "token",
                  "id" : "tok_ABC_01cbfge9qhmsdbjyb7a8e8pxt3",
                  "symbol" : "ABC",
                  "name" : "ABC Point",
                  "subunit_to_unit" : 100,
                  "created_at" : "2018-01-01T00:00:00Z",
                  "updated_at" : "2018-01-01T10:00:00Z"
                }
              },
              "metadata" : { },
              "encrypted_metadata" : { },
              "exchange" : {
                "object" : "exchange",
                "rate" : 1
              },
              "status" : "confirmed",
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z"
            }
          }
        } ]
      },
      "TransactionsResponseSchema" : {
        "description" : "The response schema for a list of transactions",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TransactionSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "transaction",
                "id" : "txn_01ce842dxrrprkak0rzq716ax1",
                "from" : {
                  "object" : "transaction_source",
                  "address" : "bec66785-f0d8-416c-a650-2859aa680166",
                  "amount" : 1000,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_ABC_01cbfge9qhmsdbjyb7a8e8pxt3",
                    "symbol" : "ABC",
                    "name" : "ABC Point",
                    "subunit_to_unit" : 100,
                    "created_at" : "2018-01-01T00:00:00Z",
                    "updated_at" : "2018-01-01T10:00:00Z"
                  }
                },
                "to" : {
                  "object" : "transaction_source",
                  "address" : "47218ab4-d94f-44e9-b7f2-36061f76ce58",
                  "amount" : 1000,
                  "token" : {
                    "object" : "token",
                    "id" : "tok_ABC_01cbfge9qhmsdbjyb7a8e8pxt3",
                    "symbol" : "ABC",
                    "name" : "ABC Point",
                    "subunit_to_unit" : 100,
                    "created_at" : "2018-01-01T00:00:00Z",
                    "updated_at" : "2018-01-01T10:00:00Z"
                  }
                },
                "exchange" : {
                  "object" : "exchange",
                  "rate" : 1
                },
                "metadata" : { },
                "encrypted_metadata" : { },
                "status" : "confirmed",
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "TransactionCalculationSchema" : {
        "required" : [ "calculated_at", "exchange_pair", "from_amount", "from_token_id", "object", "to_amount", "to_token_id" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "from_amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "from_token_id" : {
            "type" : "string"
          },
          "to_amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "to_token_id" : {
            "type" : "string"
          },
          "exchange_pair" : {
            "$ref" : "#/components/schemas/ExchangePairSchema"
          },
          "calculated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "The object schema for a transaction calculation"
      },
      "TransactionCalculationResponseSchema" : {
        "description" : "The response schema for a transaction calculation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/TransactionCalculationSchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "transaction_calculation",
              "from_amount" : 20,
              "from_token_id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
              "to_amount" : 20000,
              "to_token_id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
              "exchange_pair" : {
                "object" : "exchange_pair",
                "id" : "exg_01cgvppyrz2pprj6s0zmc26p2p",
                "name" : "ETH/OMG",
                "from_token_id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                "from_token" : {
                  "object" : "token",
                  "id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                  "symbol" : "ETH",
                  "name" : "Ethereum",
                  "subunit_to_unit" : 100,
                  "created_at" : "2018-01-01T00:00:00Z",
                  "updated_at" : "2018-01-01T10:00:00Z"
                },
                "to_token_id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
                "to_token" : {
                  "object" : "token",
                  "id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
                  "symbol" : "OMG",
                  "name" : "OmiseGO",
                  "subunit_to_unit" : 100,
                  "created_at" : "2018-01-01T00:00:00Z",
                  "updated_at" : "2018-01-01T10:00:00Z"
                },
                "rate" : 1000,
                "created_at" : "2018-01-10T00:00:00Z",
                "updated_at" : "2018-01-10T10:00:00Z"
              },
              "calculated_at" : "2018-02-02T00:00:00Z"
            }
          }
        } ]
      },
      "TransactionRequestsResponseSchema" : {
        "description" : "The response schema for a list of transaction requests",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TransactionRequestSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "transaction_request",
                "id" : "txr_01cbfg8mafdnbthgb9e68nd9y9",
                "formatted_id" : "data|txr_01cbfg8mafdnbthgb9e68nd9y9",
                "socket_topic" : "transaction_request:txr_01cbfg8mafdnbthgb9e68nd9y9",
                "type" : "send",
                "amount" : 100,
                "status" : "valid",
                "correlation_id" : "123",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "token" : null,
                "address" : "3a560be5-15d1-4463-9ec2-02bc8ded7120",
                "user_id" : "usr_01cbfg922kzmhvw04xvqn17qbd",
                "account_id" : "acc_01cbfg9b5hn05rszm3na8jac7f",
                "require_confirmation" : true,
                "max_consumptions" : 3,
                "max_consumptions_per_user" : null,
                "consumption_lifetime" : 1000,
                "expiration_reason" : null,
                "allow_amount_override" : false,
                "metadata" : { },
                "encrypted_metadata" : { },
                "expiration_date" : "2018-01-01T00:00:00Z",
                "expired_at" : "2018-01-01T00:00:00Z",
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T00:00:00Z"
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "TransactionRequestSchema" : {
        "description" : "The response schema for a transaction request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "account_id", "address", "allow_amount_override", "amount", "consumption_lifetime", "correlation_id", "created_at", "encrypted_metadata", "expiration_date", "expiration_reason", "expired_at", "formatted_id", "id", "max_consumptions", "max_consumptions_per_user", "metadata", "object", "require_confirmation", "socket_topic", "status", "token", "token_id", "type", "updated_at", "user_id" ],
          "type" : "object",
          "properties" : {
            "object" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "socket_topic" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "send", "receive" ]
            },
            "amount" : {
              "type" : "string"
            },
            "status" : {
              "type" : "string",
              "enum" : [ "valid", "expired" ]
            },
            "correlation_id" : {
              "type" : "string"
            },
            "token_id" : {
              "type" : "string"
            },
            "token" : {
              "type" : "object"
            },
            "address" : {
              "type" : "string"
            },
            "user_id" : {
              "type" : "string"
            },
            "account_id" : {
              "type" : "string"
            },
            "require_confirmation" : {
              "type" : "boolean"
            },
            "max_consumptions" : {
              "type" : "integer",
              "format" : "int32"
            },
            "max_consumptions_per_user" : {
              "type" : "integer",
              "format" : "int32"
            },
            "consumption_lifetime" : {
              "type" : "integer",
              "format" : "int32"
            },
            "expiration_reason" : {
              "type" : "string",
              "enum" : [ "max_consumptions_reached", "expired_transaction_request", "null" ]
            },
            "allow_amount_override" : {
              "type" : "boolean"
            },
            "metadata" : {
              "type" : "object"
            },
            "encrypted_metadata" : {
              "type" : "object"
            },
            "expiration_date" : {
              "type" : "string"
            },
            "expired_at" : {
              "type" : "string"
            },
            "created_at" : {
              "type" : "string"
            },
            "updated_at" : {
              "type" : "string"
            }
          },
          "example" : {
            "data" : {
              "object" : "transaction_request",
              "id" : "txr_01cbfg8mafdnbthgb9e68nd9y9",
              "formatted_id" : "data|txr_01cbfg8mafdnbthgb9e68nd9y9",
              "socket_topic" : "transaction_request:txr_01cbfg8mafdnbthgb9e68nd9y9",
              "type" : "send",
              "amount" : 100,
              "status" : "valid",
              "correlation_id" : "123",
              "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
              "token" : null,
              "address" : "3a560be5-15d1-4463-9ec2-02bc8ded7120",
              "user_id" : "usr_01cbfg922kzmhvw04xvqn17qbd",
              "account_id" : "acc_01cbfg9b5hn05rszm3na8jac7f",
              "require_confirmation" : true,
              "max_consumptions" : 3,
              "max_consumptions_per_user" : null,
              "consumption_lifetime" : 1000,
              "expiration_reason" : null,
              "allow_amount_override" : false,
              "metadata" : { },
              "encrypted_metadata" : { },
              "expiration_date" : "2018-01-01T00:00:00Z",
              "expired_at" : "2018-01-01T00:00:00Z",
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T00:00:00Z"
            }
          }
        } ]
      },
      "TransactionConsumptionsResponseSchema" : {
        "description" : "The response schema for a list of transaction consumptions",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/TransactionConsumptionSchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "transaction_consumption",
                "id" : "txc_01cbfg9qtdken61agxhx6wvj9h",
                "socket_topic" : "transaction_consumption:txc_01cbfg9qtdken61agxhx6wvj9h",
                "status" : "confirmed",
                "amount" : 100,
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "token" : { },
                "correlation_id" : "7e9c0be5-15d1-4463-9ec2-02bc8ded7120",
                "idempotency_token" : "7831c0be5-15d1-4463-9ec2-02bc8ded7120",
                "transaction_id" : "txn_01cbfga8g0dgwcfc7xh6ks1njt",
                "transaction" : { },
                "user_id" : "usr_01cbfgak47ng6x72vbwjca6j4v",
                "user" : { },
                "account_id" : "acc_01cbfgatsanznvzffqsekta5f0",
                "account" : { },
                "transaction_request_id" : "txr_01cbfgb66cby8wp5wpq6n4pm0h",
                "transaction_request" : { },
                "address" : "5555cer3-15d1-4463-9ec2-02bc8ded7120",
                "metadata" : { },
                "encrypted_metadata" : { },
                "expiration_date" : null,
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T00:00:00Z",
                "approved_at" : "2018-01-01T00:00:00Z",
                "rejected_at" : null,
                "confirmed_at" : "2018-01-01T00:00:00Z",
                "failed_at" : null,
                "expired_at" : null
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "TransactionConsumptionSchema" : {
        "description" : "The schema for a transaction request consumption",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "account", "account_id", "address", "amount", "approved_at", "confirmed_at", "correlation_id", "created_at", "encrypted_metadata", "expiration_date", "expired_at", "failed_at", "id", "idempotency_token", "metadata", "object", "rejected_at", "socket_topic", "status", "token", "token_id", "transaction", "transaction_id", "transaction_request", "transaction_request_id", "updated_at", "user", "user_id" ],
          "type" : "object",
          "properties" : {
            "object" : {
              "type" : "string"
            },
            "id" : {
              "type" : "string"
            },
            "socket_topic" : {
              "type" : "string"
            },
            "status" : {
              "type" : "string",
              "enum" : [ "pending", "approved", "rejected", "confirmed", "failed", "expired" ]
            },
            "amount" : {
              "type" : "string"
            },
            "token_id" : {
              "type" : "string"
            },
            "token" : {
              "type" : "object"
            },
            "correlation_id" : {
              "type" : "string"
            },
            "idempotency_token" : {
              "type" : "string"
            },
            "transaction_id" : {
              "type" : "string"
            },
            "transaction" : {
              "type" : "object"
            },
            "user_id" : {
              "type" : "string"
            },
            "user" : {
              "type" : "object"
            },
            "account_id" : {
              "type" : "string"
            },
            "account" : {
              "type" : "object"
            },
            "transaction_request_id" : {
              "type" : "string"
            },
            "transaction_request" : {
              "type" : "object"
            },
            "address" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "object"
            },
            "encrypted_metadata" : {
              "type" : "object"
            },
            "expiration_date" : {
              "type" : "string"
            },
            "created_at" : {
              "type" : "string"
            },
            "updated_at" : {
              "type" : "string"
            },
            "approved_at" : {
              "type" : "string"
            },
            "rejected_at" : {
              "type" : "string"
            },
            "confirmed_at" : {
              "type" : "string"
            },
            "failed_at" : {
              "type" : "string"
            },
            "expired_at" : {
              "type" : "string"
            }
          },
          "example" : {
            "data" : {
              "object" : "transaction_consumption",
              "id" : "txc_01cbfg9qtdken61agxhx6wvj9h",
              "socket_topic" : "transaction_consumption:txc_01cbfg9qtdken61agxhx6wvj9h",
              "status" : "confirmed",
              "amount" : 100,
              "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
              "token" : { },
              "correlation_id" : "7e9c0be5-15d1-4463-9ec2-02bc8ded7120",
              "idempotency_token" : "7831c0be5-15d1-4463-9ec2-02bc8ded7120",
              "transaction_id" : "txn_01cbfga8g0dgwcfc7xh6ks1njt",
              "transaction" : { },
              "user_id" : "usr_01cbfgak47ng6x72vbwjca6j4v",
              "user" : { },
              "account_id" : "acc_01cbfgatsanznvzffqsekta5f0",
              "account" : { },
              "transaction_request_id" : "txr_01cbfgb66cby8wp5wpq6n4pm0h",
              "transaction_request" : { },
              "address" : "5555cer3-15d1-4463-9ec2-02bc8ded7120",
              "metadata" : { },
              "encrypted_metadata" : { },
              "expiration_date" : null,
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T00:00:00Z",
              "approved_at" : "2018-01-01T00:00:00Z",
              "rejected_at" : null,
              "confirmed_at" : "2018-01-01T00:00:00Z",
              "failed_at" : null,
              "expired_at" : null
            }
          }
        } ]
      },
      "SettingResponse" : {
        "description" : "The response schema for settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/SettingResponse_data"
            }
          },
          "example" : {
            "data" : {
              "object" : "setting",
              "tokens" : [ {
                "object" : "token",
                "id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "symbol" : "BTC",
                "name" : "Bitcoin",
                "subunit_to_unit" : 100000000000000000
              }, {
                "object" : "token",
                "id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "symbol" : "OMG",
                "name" : "OmiseGO",
                "subunit_to_unit" : 100000000000000000
              } ]
            }
          }
        } ]
      },
      "AccessKeySchema" : {
        "required" : [ "access_key", "account_id", "created_at", "deleted_at", "id", "object", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "access_key" : {
            "type" : "string"
          },
          "secret_key" : {
            "type" : "string",
            "nullable" : true
          },
          "account_id" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        },
        "description" : "The object schema for an access key"
      },
      "AccessKeyResponseSchema" : {
        "description" : "The response schema for an access key",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/AccessKeySchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "key",
              "id" : "key_01ce843mvg5fa1zpk5myy69h4q",
              "access_key" : "jZKpGKgwy5LJTWwXqSD4jVWYDdnTKHlRYkaNB6SqsaQ",
              "secret_key" : "the_secret_key_or_null",
              "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z",
              "deleted_at" : null
            }
          }
        } ]
      },
      "AccessKeysResponseSchema" : {
        "description" : "The response schema for a list of access keys",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AccessKeySchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "key",
                "id" : "key_01ce843mvg5fa1zpk5myy69h4q",
                "access_key" : "jZKpGKgwy5LJTWwXqSD4jVWYDdnTKHlRYkaNB6SqsaQ",
                "secret_key" : "the_secret_key_or_null",
                "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z",
                "deleted_at" : null
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "APIKeySchema" : {
        "required" : [ "account_id", "created_at", "deleted_at", "expired", "id", "key", "object", "owner_app", "updated_at" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "owner_app" : {
            "type" : "string"
          },
          "expired" : {
            "type" : "boolean"
          },
          "account_id" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deleted_at" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        },
        "description" : "The object schema for an API key"
      },
      "APIKeyResponseSchema" : {
        "description" : "The response schema for an API key",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/APIKeySchema"
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "api_key",
              "id" : "api_01ce844d5w9e81snekr5kprvem",
              "key" : "jZKpGKgwy5LJTWwXqSD4jVWYDdnTKHlRYkaNB6SqsaQ",
              "owner_app" : "admin_api",
              "expired" : false,
              "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
              "created_at" : "2018-01-01T00:00:00Z",
              "updated_at" : "2018-01-01T10:00:00Z",
              "deleted_at" : null
            }
          }
        } ]
      },
      "APIKeysResponseSchema" : {
        "description" : "The response schema for a list of API keys",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponseSchema"
        }, {
          "required" : [ "data" ],
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "allOf" : [ {
                "$ref" : "#/components/schemas/PaginatedListSchema"
              }, {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/APIKeySchema"
                    }
                  }
                }
              } ]
            }
          },
          "example" : {
            "version" : "1",
            "success" : true,
            "data" : {
              "object" : "list",
              "data" : [ {
                "object" : "api_key",
                "id" : "api_01ce844d5w9e81snekr5kprvem",
                "key" : "jZKpGKgwy5LJTWwXqSD4jVWYDdnTKHlRYkaNB6SqsaQ",
                "owner_app" : "admin_api",
                "expired" : false,
                "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "created_at" : "2018-01-01T00:00:00Z",
                "updated_at" : "2018-01-01T10:00:00Z",
                "deleted_at" : null
              } ],
              "pagination" : {
                "per_page" : 10,
                "current_page" : 1,
                "is_first_page" : true,
                "is_last_page" : true
              }
            }
          }
        } ]
      },
      "TransactionSchema_from" : {
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "token" : {
            "$ref" : "#/components/schemas/TokenSchema"
          }
        }
      },
      "TransactionSchema_exchange" : {
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "rate" : {
            "type" : "number"
          }
        }
      },
      "SettingResponse_data" : {
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "tokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TokenSchema"
            }
          }
        }
      }
    },
    "responses" : {
      "AuthenticationTokenResponse" : {
        "description" : "Authentication token response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticationTokenResponseSchema"
            }
          }
        }
      },
      "TokenResponse" : {
        "description" : "Returns a single tokens",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TokenResponseSchema"
            }
          }
        }
      },
      "TokenStatsResponse" : {
        "description" : "Returns the stats for a single token",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TokenStatsResponseSchema"
            }
          }
        }
      },
      "TokensResponse" : {
        "description" : "Returns a list of tokens",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TokensResponseSchema"
            }
          }
        }
      },
      "MintsResponse" : {
        "description" : "Returns a list of mints",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MintsResponseSchema"
            }
          }
        }
      },
      "ExchangePairResponse" : {
        "description" : "Returns a single exchange pair",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ExchangePairResponseSchema"
            }
          }
        }
      },
      "ExchangePairsResponse" : {
        "description" : "Returns a list of exchange pairs",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ExchangePairsResponseSchema"
            }
          }
        }
      },
      "CategoryResponse" : {
        "description" : "Returns a single category",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CategoryResponseSchema"
            }
          }
        }
      },
      "CategoriesResponse" : {
        "description" : "Returns a list of categories",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CategoriesResponseSchema"
            }
          }
        }
      },
      "AccountResponse" : {
        "description" : "Returns a single account",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AccountResponseSchema"
            }
          }
        }
      },
      "AccountsResponse" : {
        "description" : "Returns a list of accounts",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AccountsResponseSchema"
            }
          }
        }
      },
      "UserResponse" : {
        "description" : "Returns a single user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserResponseSchema"
            }
          }
        }
      },
      "MembersResponse" : {
        "description" : "Returns a list of members",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MembersResponseSchema"
            }
          }
        }
      },
      "UsersResponse" : {
        "description" : "Returns a list of users",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UsersResponseSchema"
            }
          }
        }
      },
      "WalletResponse" : {
        "description" : "Returns a single wallet",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WalletResponseSchema"
            }
          }
        }
      },
      "WalletsResponse" : {
        "description" : "Returns a list of wallets",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WalletsResponseSchema"
            }
          }
        }
      },
      "TransactionResponse" : {
        "description" : "Returns a single transaction",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionResponseSchema"
            }
          }
        }
      },
      "TransactionsResponse" : {
        "description" : "Returns a list of transactions",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionsResponseSchema"
            }
          }
        }
      },
      "TransactionCalculationResponse" : {
        "description" : "Returns a transaction calculation",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionCalculationResponseSchema"
            }
          }
        }
      },
      "TransactionRequestsResponse" : {
        "description" : "Returns a list of transaction requests",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionRequestsResponseSchema"
            }
          }
        }
      },
      "TransactionRequestResponse" : {
        "description" : "Transaction request response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionRequestSchema"
            }
          }
        }
      },
      "TransactionConsumptionsResponse" : {
        "description" : "Returns a list of transaction consumptions",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionConsumptionsResponseSchema"
            }
          }
        }
      },
      "TransactionConsumptionResponse" : {
        "description" : "Transaction request consumption response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionConsumptionSchema"
            }
          }
        }
      },
      "SettingResponse" : {
        "description" : "Returns a list of settings",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SettingResponse"
            }
          }
        }
      },
      "AdminResponse" : {
        "description" : "Returns a single admin panel user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AdminResponseSchema"
            }
          }
        }
      },
      "AdminsResponse" : {
        "description" : "Returns a list of admin panel users",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AdminsResponseSchema"
            }
          }
        }
      },
      "AccessKeyResponse" : {
        "description" : "Returns a single access key",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AccessKeyResponseSchema"
            }
          }
        }
      },
      "AccessKeysResponse" : {
        "description" : "Returns a list of access keys",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AccessKeysResponseSchema"
            }
          }
        }
      },
      "APIKeyResponse" : {
        "description" : "Returns a single API key",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/APIKeyResponseSchema"
            }
          }
        }
      },
      "APIKeysResponse" : {
        "description" : "Returns a list of API keys",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/APIKeysResponseSchema"
            }
          }
        }
      },
      "EmptyResponse" : {
        "description" : "Returns an empty response",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BaseResponseSchema"
            }
          }
        }
      },
      "InternalServerError" : {
        "description" : "Returns an internal server error",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponseSchema"
            }
          }
        }
      }
    },
    "parameters" : {
      "IdempotencyToken" : {
        "name" : "Idempotency-Token",
        "in" : "header",
        "description" : "The idempotency token for the request",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "LoginBody" : {
        "description" : "The parameters to use for logging in a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "password" ],
              "properties" : {
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "password" : {
                  "type" : "string",
                  "format" : "password"
                }
              },
              "example" : {
                "email" : "test@example.com",
                "password" : "the_password"
              }
            }
          }
        },
        "required" : true
      },
      "SwitchAccountBody" : {
        "description" : "The parameters to use for switching the current account",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "account_id" ],
              "properties" : {
                "account_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "accound_id" : "the_account_id"
              }
            }
          }
        },
        "required" : true
      },
      "ResetPasswordBody" : {
        "description" : "The parameters to use for requesting a reset password",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "redirect_url" ],
              "properties" : {
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "redirect_url" : {
                  "type" : "string"
                }
              },
              "example" : {
                "email" : "test@example.com",
                "redirect_url" : "https://example.com/admin/update_password?email={email}&token={token}"
              }
            }
          }
        },
        "required" : true
      },
      "UpdatePasswordBody" : {
        "description" : "The parameters to use for reseting a password",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "password", "password_confirmation", "redirect_url" ],
              "properties" : {
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "token" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string",
                  "format" : "password"
                },
                "password_confirmation" : {
                  "type" : "string",
                  "format" : "password"
                }
              },
              "example" : {
                "email" : "test@example.com",
                "token" : "26736ca1-43a0-442b-803e-76220cd3cb1d",
                "password" : "nZi9Enc5$l#",
                "password_confirmation" : "nZi9Enc5$l#"
              }
            }
          }
        },
        "required" : true
      },
      "TokenAllBody" : {
        "description" : "The parameters to use for listing the tokens",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "TokenGetBody" : {
        "description" : "The parameters to use for retrieving a specific token by its id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3"
              }
            }
          }
        },
        "required" : true
      },
      "TokenStatsBody" : {
        "description" : "The parameters to use for retrieving the stats of a token",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "tok_abc_01cbfge9qhmsdbjyb7a8e8pxt3"
              }
            }
          }
        },
        "required" : true
      },
      "TokenCreateBody" : {
        "description" : "The parameters to create a token. Note that if amount is specified, the token will be minted automatically.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "description", "name", "subunit_to_unit", "symbol" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "symbol" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "subunit_to_unit" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "iso_code" : {
                  "type" : "string"
                },
                "short_symbol" : {
                  "type" : "string"
                },
                "subunit" : {
                  "type" : "string"
                },
                "symbol_first" : {
                  "type" : "boolean"
                },
                "html_entity" : {
                  "type" : "string"
                },
                "iso_numeric" : {
                  "type" : "string"
                },
                "smallest_denomination" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "symbol" : "BTC",
                "name" : "Bitcoin",
                "description" : "desc",
                "subunit_to_unit" : 100
              }
            }
          }
        },
        "required" : true
      },
      "TokenUpdateBody" : {
        "description" : "The parameters to update a token.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "iso_code" : {
                  "type" : "string"
                },
                "short_symbol" : {
                  "type" : "string"
                },
                "symbol_first" : {
                  "type" : "boolean"
                },
                "html_entity" : {
                  "type" : "string"
                },
                "iso_numeric" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "id" : "tok_ABC_01ce846km1syzwezxfmgdn7dt7",
                "name" : "Bitcoin v2",
                "description" : "an awesome updated description"
              }
            }
          }
        },
        "required" : true
      },
      "TokenMintBody" : {
        "description" : "The parameters to create a token. Note that if amount is specified, the token will be minted automatically.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "amount", "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "example" : {
                "id" : "tok_ABC_01ce846km1syzwezxfmgdn7dt7",
                "amount" : 1000
              }
            }
          }
        },
        "required" : true
      },
      "TokenGetMintsBody" : {
        "description" : "The parameters to use for listing the mints for a token",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "tok_ABC_01ce846km1syzwezxfmgdn7dt7",
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "ExchangePairAllBody" : {
        "description" : "The parameters to use for listing the exchange pairs",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "ExchangePairGetBody" : {
        "description" : "The parameters to use for retrieving a specific exchange pair by its id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "exg_01cgvppyrz2pprj6s0zmc26p2p"
              }
            }
          }
        },
        "required" : true
      },
      "ExchangePairCreateBody" : {
        "description" : "The parameters to create an exchange pair.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "from_token_id", "rate", "to_token_id" ],
              "properties" : {
                "from_token_id" : {
                  "type" : "string"
                },
                "to_token_id" : {
                  "type" : "string"
                },
                "rate" : {
                  "type" : "number"
                },
                "sync_opposite" : {
                  "type" : "boolean"
                }
              },
              "example" : {
                "from_token_id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                "to_token_id" : "tok_OMG_01cgvrqbfpa23ehkmrtqpbsyyp",
                "rate" : 0.017,
                "sync_opposite" : false
              }
            }
          }
        },
        "required" : true
      },
      "ExchangePairUpdateBody" : {
        "description" : "The parameters to update an exchange pair.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "rate" : {
                  "type" : "number"
                }
              },
              "example" : {
                "id" : "exg_01cgvppyrz2pprj6s0zmc26p2p",
                "rate" : 0.099
              }
            }
          }
        },
        "required" : true
      },
      "ExchangePairDeleteBody" : {
        "description" : "The parameters to delete an exchange pair.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "exg_01cgvppyrz2pprj6s0zmc26p2p"
              }
            }
          }
        },
        "required" : true
      },
      "CategoryAllBody" : {
        "description" : "The parameters to use for listing the categories",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "CategoryGetBody" : {
        "description" : "The parameters to use for retrieving a specific category",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "cat_01ce30qdajwb7gdecq0ebn3twq"
              }
            }
          }
        },
        "required" : true
      },
      "CategoryCreateBody" : {
        "description" : "The parameters to use for creating a new category.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "account_ids", "description", "name" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "account_ids" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "example" : {
                "name" : "Name of category",
                "description" : "The category description",
                "account_ids" : [ "acc_01ca26pkge49aabzd6k6mshn0y" ]
              }
            }
          }
        },
        "required" : true
      },
      "CategoryUpdateBody" : {
        "description" : "The parameters to use for updating an account. Only the provided fields are updated.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "account_ids" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "example" : {
                "id" : "cat_01ce30qdajwb7gdecq0ebn3twq",
                "name" : "Name to Update",
                "description" : "New category description",
                "account_ids" : [ "acc_01ca26pkge49aabzd6k6mshn0y" ]
              }
            }
          }
        },
        "required" : true
      },
      "CategoryDeleteBody" : {
        "description" : "The parameters to use for deleting an category.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "cat_01ce30qdajwb7gdecq0ebn3twq"
              }
            }
          }
        },
        "required" : true
      },
      "AccountAllBody" : {
        "description" : "The parameters to use for listing the accounts",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "AccountGetBody" : {
        "description" : "The parameters to use for retrieving a specific account by its id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf"
              }
            }
          }
        },
        "required" : true
      },
      "AccountCreateBody" : {
        "description" : "The parameters to use for creating a new account.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "name" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "parent_id" : {
                  "type" : "string"
                },
                "category_ids" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "name" : "Account Name",
                "description" : "The account description",
                "parent_id" : "acc_01ca26pkge49aabzd6k6mshn0y",
                "category_ids" : [ ],
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "AccountUpdateBody" : {
        "description" : "The parameters to use for updating an account. Only the provided fields are updated.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "category_ids" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "name" : "Account Name",
                "description" : "The account description",
                "category_ids" : [ ],
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "AccountListBodyWithOwned" : {
        "description" : "The parameters to use for listing an account's owned data",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "owned" : {
                  "type" : "boolean"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "owned" : true,
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "AccountListBody" : {
        "description" : "The parameters to use for listing an account's data",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "AccountAssignUserBody" : {
        "description" : "The parameters to use for assigning a user to an account",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "example" : {
                "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "user_id" : "usr_01ce83q2zw7zk1dqr79t22zr1v",
                "role_name" : "admin",
                "redirect_url" : "https://domain/redirect_path?email={email}&token={token}"
              },
              "oneOf" : [ {
                "required" : [ "account_id", "redirect_url", "role_name", "user_id" ],
                "properties" : {
                  "user_id" : {
                    "type" : "string"
                  },
                  "account_id" : {
                    "type" : "string"
                  },
                  "role_name" : {
                    "type" : "string"
                  },
                  "redirect_url" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "user_id" : "usr_01ce83q2zw7zk1dqr79t22zr1v",
                  "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                  "role_name" : "admin",
                  "redirect_url" : "https://domain/redirect_path?email={email}&token={token}"
                }
              }, {
                "required" : [ "account_id", "email", "redirect_url", "role_name" ],
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "account_id" : {
                    "type" : "string"
                  },
                  "role_name" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "email" : "user@example.com",
                  "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                  "role_name" : "admin",
                  "redirect_url" : "https://domain/redirect_path?email={email}&token={token}"
                }
              } ]
            }
          }
        },
        "required" : true
      },
      "AccountUnassignUserBody" : {
        "description" : "The parameters to use for unassigning a user from an account",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "account_id", "user_id" ],
              "properties" : {
                "user_id" : {
                  "type" : "string"
                },
                "account_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "account_id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "user_id" : "usr_01ce83q2zw7zk1dqr79t22zr1v"
              }
            }
          }
        },
        "required" : true
      },
      "AccountUploadBody" : {
        "description" : "The parameters to use for uploading an account's avatar. Only supports .jpg, .jpeg, .gif and .png.",
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "avatar", "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "avatar" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "example" : {
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "avatar" : "/path/to/file"
              }
            }
          }
        },
        "required" : true
      },
      "AdminAllBody" : {
        "description" : "The parameters to use for listing the users",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "AdminGetBody" : {
        "description" : "The parameters to use for retrieving a specific user by its id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "usr_01ce83q2zw7zk1dqr79t22zr1v"
              }
            }
          }
        },
        "required" : true
      },
      "InviteAcceptBody" : {
        "description" : "The parameters to use for accepting an invite",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "email", "password", "password_confirmation", "token" ],
              "properties" : {
                "email" : {
                  "type" : "string"
                },
                "token" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "password_confirmation" : {
                  "type" : "string"
                }
              },
              "example" : {
                "email" : "example@omise.co",
                "token" : "dmWEOiEvlPfEpb2XPEkNkNYR4xEqNuf25E9hqBYwvzg",
                "password" : "user_provided_password",
                "password_confirmation" : "user_provided_password"
              }
            }
          }
        },
        "required" : true
      },
      "AdminUpdateBody" : {
        "description" : "The parameters to use for updating a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "email" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "email" : "example@omise.co",
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "AdminUploadBody" : {
        "description" : "The parameters to use for uploading an admin's avatar. Only supports .jpg, .jpeg, .gif and .png.",
        "content" : {
          "application/x-www-form-urlencoded" : {
            "schema" : {
              "required" : [ "avatar", "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "avatar" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "example" : {
                "id" : "usr_01ce83xvrsh8bzpctq3wqbprf8",
                "avatar" : "/path/to/file"
              }
            }
          }
        },
        "required" : true
      },
      "UserAllBody" : {
        "description" : "The parameters to use for listing the users",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "UserGetBody" : {
        "description" : "The parameters to use for retrieving a specific user by its id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "usr_01ce83q2zw7zk1dqr79t22zr1v"
              }
            }
          }
        },
        "required" : true
      },
      "UserBody" : {
        "description" : "The parameters to use for creating or updating a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "provider_user_id", "username" ],
              "properties" : {
                "provider_user_id" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "provider_user_id" : "wijf-fbancomw-dqwjudb",
                "username" : "thibault@omise.co",
                "metadata" : {
                  "first_name" : "Thibault",
                  "last_name" : "Denizet"
                },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "UserIdentifierBody" : {
        "description" : "The parameters to use for retrieving a specific user by its id or provider_user_id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "example" : {
                "id" : "usr_01ce83q2zw7zk1dqr79t22zr1v"
              },
              "oneOf" : [ {
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  }
                }
              }, {
                "required" : [ "provider_user_id" ],
                "properties" : {
                  "provider_user_id" : {
                    "type" : "string"
                  }
                }
              } ]
            }
          }
        },
        "required" : true
      },
      "UserIdentifierWithFiltersBody" : {
        "description" : "The parameters to use for retrieving a specific user by its id or provider_user_id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "example" : {
                "provider_user_id" : "provider_user_id01",
                "page" : 1,
                "per_page" : 10,
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              },
              "oneOf" : [ {
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "page" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "per_page" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "sort_by" : {
                    "type" : "string"
                  },
                  "sort_dir" : {
                    "type" : "string",
                    "enum" : [ "asc", "desc" ]
                  }
                }
              }, {
                "required" : [ "provider_user_id" ],
                "properties" : {
                  "provider_user_id" : {
                    "type" : "string"
                  },
                  "page" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "per_page" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "sort_by" : {
                    "type" : "string"
                  },
                  "sort_dir" : {
                    "type" : "string",
                    "enum" : [ "asc", "desc" ]
                  }
                }
              } ]
            }
          }
        },
        "required" : true
      },
      "LogoutUserBody" : {
        "description" : "The parameters to use to log out a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "auth_token" ],
              "properties" : {
                "auth_token" : {
                  "type" : "string"
                }
              },
              "example" : {
                "auth_token" : "atk_01ce83q2zw7zk1dqr79t22zr1v"
              }
            }
          }
        },
        "required" : true
      },
      "WalletAllBody" : {
        "description" : "The parameters to use for listing the wallets",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "WalletAccountBody" : {
        "description" : "The parameters to use for listing the wallets for an account",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "id" : "acc_01ca2p8jqans5aty5gj5etmjcf",
                "page" : 1,
                "per_page" : 10,
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "WalletUserBody" : {
        "description" : "The parameters to use for listing the wallets for a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "id" : "usr_01cc02x0v98qcctvycfx4vsk8x",
                "page" : 1,
                "per_page" : 10,
                "sort_by" : "field_name",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "WalletGetBody" : {
        "description" : "The parameters to use for retrieving a wallet by its address",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "address" ],
              "properties" : {
                "address" : {
                  "type" : "string"
                }
              },
              "example" : {
                "address" : "ce3982f5-4a27-498d-a91b-7bb2e2a8d3d1"
              }
            }
          }
        },
        "required" : true
      },
      "WalletCreateBody" : {
        "description" : "The parameters to use for creating a wallet",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "example" : {
                "name" : "My Wallet",
                "identifier" : "secondary",
                "user_id" : "usr_01cbfg6v9thrc3sd9m1v4gazjv"
              },
              "oneOf" : [ {
                "required" : [ "identifier", "name", "provider_user_id" ],
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "identifier" : {
                    "type" : "string",
                    "enum" : [ "burn", "secondary" ]
                  },
                  "provider_user_id" : {
                    "type" : "string"
                  }
                }
              }, {
                "required" : [ "identifier", "name", "user_id" ],
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "identifier" : {
                    "type" : "string",
                    "enum" : [ "burn", "secondary" ]
                  },
                  "user_id" : {
                    "type" : "string"
                  }
                }
              }, {
                "required" : [ "account_id", "identifier", "name" ],
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "identifier" : {
                    "type" : "string",
                    "enum" : [ "burn", "secondary" ]
                  },
                  "account_id" : {
                    "type" : "string"
                  }
                }
              } ]
            }
          }
        },
        "required" : true
      },
      "TransactionAllBody" : {
        "description" : "The parameters to use for listing the transactions",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionGetBody" : {
        "description" : "The parameters to use for retrieving a specific transaction by its id",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "txn_01ce83x8w4db56f3fcjy4n4qpc"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionCreateBody" : {
        "description" : "The parameters for making a transaction from an address to another.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "amount", "from_address", "idempotency_token", "to_address", "token_id" ],
              "properties" : {
                "idempotency_token" : {
                  "type" : "string"
                },
                "from_address" : {
                  "type" : "string"
                },
                "to_address" : {
                  "type" : "string"
                },
                "from_account_id" : {
                  "type" : "string"
                },
                "to_account_id" : {
                  "type" : "string"
                },
                "from_user_id" : {
                  "type" : "string"
                },
                "to_user_id" : {
                  "type" : "string"
                },
                "from_provider_user_id" : {
                  "type" : "string"
                },
                "to_provider_user_id" : {
                  "type" : "string"
                },
                "from_token_id" : {
                  "type" : "string"
                },
                "to_token_id" : {
                  "type" : "string"
                },
                "token_id" : {
                  "type" : "string"
                },
                "from_amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "to_amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "exchange_account_id" : {
                  "type" : "string"
                },
                "exchange_wallet_address" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "idempotency_token" : "2345",
                "from_address" : "81e75f46-ee14-4e4c-a1e5-cddcb26dce9c",
                "to_address" : "4aa07691-2f99-4cb1-b36c-50763e2d2ba8",
                "token_id" : "tok_BTC_01cbffybmtbbb449r05zgfct2h",
                "amount" : 100,
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "TransactionCalculateBody" : {
        "description" : "The parameters for calculating transaction amounts.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "from_token_id", "to_token_id" ],
              "properties" : {
                "from_amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "from_token_id" : {
                  "type" : "string"
                },
                "to_amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "to_token_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "from_token_id" : "tok_ETH_01cbfge9qhmsdbjyb7a8e8pxt3",
                "to_token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "from_amount" : 100
              }
            }
          }
        },
        "required" : true
      },
      "CreateTransactionRequestBody" : {
        "description" : "Create a transaction request using the specified values. That request can then be consumed using a different endpoint to create a transaction from that request.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "token_id", "type" ],
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "send", "receive" ]
                },
                "token_id" : {
                  "type" : "string",
                  "description" : "The token ID to use for the transaction."
                },
                "amount" : {
                  "type" : "integer",
                  "description" : "The amount to transfer. If not specified, the consumption will need to set the amount.",
                  "format" : "int32"
                },
                "correlation_id" : {
                  "type" : "string",
                  "description" : "Optional unique identifier to tie a request with your system.",
                  "default" : "null"
                },
                "account_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "provider_user_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "address" : {
                  "type" : "string",
                  "description" : "If not specified, the current user's primary wallet will be used. If specified, it needs to be one of the account's or user's addresses."
                },
                "require_confirmation" : {
                  "type" : "boolean",
                  "description" : "Indicates if a consumption of the created request needs to be approved before being processed.",
                  "default" : false
                },
                "max_consumptions" : {
                  "type" : "integer",
                  "description" : "The number of times this created request can be consumed.",
                  "format" : "int32"
                },
                "max_consumptions_per_user" : {
                  "type" : "integer",
                  "description" : "The maximum number of times a user can consume the request.",
                  "format" : "int32"
                },
                "consumption_lifetime" : {
                  "type" : "integer",
                  "description" : "The lifetime in milliseconds of how long a consumption can stay 'pending' before being expired. If a consumption is not approved before its expiration date, it will become invalid and be cancelled. This property can be used to avoid stale consumptions blocking the 'max_consumptions' count.",
                  "format" : "int32"
                },
                "expiration_date" : {
                  "type" : "string",
                  "description" : "The datetime at which the created request should expire (no one will be able to consume it anymore). The format is yyyy-MM-dd'T'HH:mm:ssZZZZZ.",
                  "default" : "null"
                },
                "allow_amount_override" : {
                  "type" : "boolean",
                  "description" : "Defines if the amount set in the created request can be overriden in a consumption. Cannot be set to true if the amount property is not set at creation",
                  "default" : true
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "type" : "send",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "amount" : 100,
                "correlation_id" : "123",
                "address" : "2ae52683-68d8-4af6-94d7-5ed4c34ecf1a"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionRequestAllBody" : {
        "description" : "The parameters to use for listing the transaction requests",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "search_terms" : { },
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "GetTransactionRequestBody" : {
        "description" : "Get a transaction request using the specified ID.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "formatted_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "formatted_id" : "data|txr_01cbfgc8cmmyzy1cfzpqwme3ey"
              }
            }
          }
        },
        "required" : true
      },
      "ConsumeTransactionRequestBody" : {
        "description" : "Consume a transaction request using the specified values.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "formatted_transaction_request_id", "idempotency_token" ],
              "properties" : {
                "idempotency_token" : {
                  "type" : "string"
                },
                "formatted_transaction_request_id" : {
                  "type" : "string"
                },
                "correlation_id" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "token_id" : {
                  "type" : "string"
                },
                "account_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "provider_user_id" : {
                  "type" : "string",
                  "default" : "The owner of the given address."
                },
                "address" : {
                  "type" : "string",
                  "description" : "If not specified, the current user's primary wallet will be used. If specified, it needs to be one of the account's or user's addresses."
                },
                "metadata" : {
                  "type" : "object"
                },
                "encrypted_metadata" : {
                  "type" : "object"
                }
              },
              "example" : {
                "idempotency_token" : "32435",
                "formatted_transaction_request_id" : "txr_01cbfgcts5kqfgpqxcxn71rnbs",
                "correlation_id" : "123",
                "token_id" : "tok_OMG_01cbffwvj6ma9a9gg1tb24880q",
                "amount" : 100,
                "provider_user_id" : "provider_user_id01",
                "address" : "2ae52683-68d8-4af6-94d7-5ed4c34ecf1a",
                "metadata" : { },
                "encrypted_metadata" : { }
              }
            }
          }
        },
        "required" : true
      },
      "TransactionConsumptionAllBody" : {
        "description" : "The parameters to use for listing the consumptions",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionConsumptionAllForUserBody" : {
        "description" : "The parameters to use for listing the consumptions for a user",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "id" : "usr_02cbfg6v9thrc3sd9m1v4gazjv",
                "page" : 1,
                "per_page" : 10,
                "search_terms" : { },
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionConsumptionAllForWalletBody" : {
        "description" : "The parameters to use for listing the consumptions for a wallet",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "address" ],
              "properties" : {
                "address" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "address" : "232454354",
                "page" : 1,
                "per_page" : 10,
                "search_terms" : { },
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "TransactionConsumptionAllForTransactionRequestBody" : {
        "description" : "The parameters to use for listing the consumptions for a transaction request",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "formatted_transaction_request_id" ],
              "properties" : {
                "formatted_transaction_request_id" : {
                  "type" : "string"
                },
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_terms" : {
                  "type" : "object"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "formatted_transaction_request_id" : "txr_01cbfg8mafdnbthgb9e68nd9y9",
                "page" : 1,
                "per_page" : 10,
                "search_terms" : { },
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "GetConsumptionRequestBody" : {
        "description" : "Get a consumption using the specified ID.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "txc_01abfg5m2ee06kzm8tbysfmmw5"
              }
            }
          }
        },
        "required" : true
      },
      "ConsumptionConfirmationRequestBody" : {
        "description" : "Approve or reject a consumption using the specified ID.",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "txn_01cbfg5m2ee06kzm8tbysfmmw5"
              }
            }
          }
        },
        "required" : true
      },
      "AccessKeyAllBody" : {
        "description" : "The parameters to use for listing the access keys",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "created_at",
                "sort_dir" : "desc"
              }
            }
          }
        },
        "required" : true
      },
      "AccessKeyUpdateBody" : {
        "description" : "The parameters to use for updating an access key",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "expired" : {
                  "type" : "boolean"
                }
              },
              "example" : {
                "id" : "key_01ce83yphmq6vt4qnmn3ykwcw6",
                "expired" : true
              }
            }
          }
        },
        "required" : true
      },
      "AccessKeyDeleteBody" : {
        "description" : "The parameters to use for deleting an access key",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "example" : {
                "id" : "key_01ce83yphmq6vt4qnmn3ykwcw6"
              },
              "oneOf" : [ {
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "id" : "key_01ce83yphmq6vt4qnmn3ykwcw6"
                }
              }, {
                "required" : [ "access_key" ],
                "properties" : {
                  "access_key" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "access_key" : "jZKpGKgwy5LJTWwXqSD4jVWYDdnTKHlRYkaNB6SqsaQ"
                }
              } ]
            }
          }
        },
        "required" : true
      },
      "APIKeyAllBody" : {
        "description" : "The parameters to use for listing the API keys",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "properties" : {
                "page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "per_page" : {
                  "minimum" : 1,
                  "type" : "integer",
                  "format" : "int32"
                },
                "search_term" : {
                  "type" : "string"
                },
                "sort_by" : {
                  "type" : "string"
                },
                "sort_dir" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              },
              "example" : {
                "page" : 1,
                "per_page" : 10,
                "search_term" : "",
                "sort_by" : "created_at",
                "sort_dir" : "asc"
              }
            }
          }
        },
        "required" : true
      },
      "APIKeyUpdateBody" : {
        "description" : "The parameters to use for updating an API key",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "expired", "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "expired" : {
                  "type" : "boolean"
                }
              },
              "example" : {
                "id" : "api_01ce83yphmq6vt4qnmn3ykwcw6",
                "expired" : true
              }
            }
          }
        },
        "required" : true
      },
      "APIKeyDeleteBody" : {
        "description" : "The parameters to use for deleting an API key",
        "content" : {
          "application/vnd.omisego.v1+json" : {
            "schema" : {
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "api_01ce83yphmq6vt4qnmn3ykwcw6"
              }
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "AdminAuth" : {
        "type" : "apiKey",
        "description" : "OMGAdmin Base64(user_id:authentication_token)",
        "name" : "Authorization",
        "in" : "header"
      },
      "ProviderAuth" : {
        "type" : "apiKey",
        "description" : "OMGProvider Base64(access_key:secret_key)",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}