version: 2.1


executors:
  builder:
    docker:
      - image: omisegoimages/ewallet-builder:v1.2
    working_directory: ~/src

  builder_pg:
    docker:
      - image: omisegoimages/ewallet-builder:v1.2
      - image: postgres:9.6-alpine
    working_directory: ~/src

  deploy:
    docker:
      - image: omisegoimages/ewallet-deploy:stable
    working_directory: ~/src

  metal:
    machine: true
    environment:
      IMAGE_NAME: "omisego/ewallet"


commands:
  notify_slack_failure:
    description: "Notify Slack only on failure"
    steps:
      - run:
          name: Notify Slack on failure
          command: |
            if [ -z "$SLACK_WEBHOOK" ]; then
              printf "\\033[0;33mSkipping Slack notification (SLACK_WEBHOOK missing)\\033[0;0m\\n"
              exit 0
            fi

            GH_URL="https://github.com/omisego/ewallet/tree/${CIRCLE_BRANCH}"
            CIRCLE_URL="https://circleci.com/gh/omisego/ewallet/${CIRCLE_BUILD_NUM}"
            WORKFLOW_URL="https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
            MESSAGE="omisego/ewallet branch ${CIRCLE_BRANCH} has failed during ${CIRCLE_JOB}"
            RICH_MESSAGE="*omisego/ewallet* branch *${CIRCLE_BRANCH}* has failed during ${CIRCLE_JOB}"

            curl -X POST -H 'Content-Type: application/json' --data "{ \
              \"attachments\": [ \
                { \
                  \"fallback\": \"${MESSAGE}\", \
                  \"text\": \":no_good: ${RICH_MESSAGE}\", \
                  \"mrkdwn\": true, \
                  \"color\": \"#ed2c5c\", \
                  \"fields\": [ \
                    { \
                      \"title\": \"Branch\", \
                      \"value\": \"<$GH_URL|$CIRCLE_BRANCH>\", \
                      \"short\": true \
                    }, { \
                      \"title\": \"Build\", \
                      \"value\": \"<$CIRCLE_URL|$CIRCLE_BUILD_NUM>\", \
                      \"short\": true \
                    } \
                  ] \
                } \
              ] \
            }" ${SLACK_WEBHOOK}
          when: on_fail

  notify_slack:
    description: "Notify Slack"
    steps:
      - run:
          name: Notify Slack
          command: |
            if [ -z "$SLACK_WEBHOOK" ]; then
              printf "\\033[0;33mSkipping Slack notification (SLACK_WEBHOOK missing)\\033[0;0m\\n"
              exit 0
            fi

            GH_URL="https://github.com/omisego/ewallet/tree/${CIRCLE_BRANCH}"
            CIRCLE_URL="https://circleci.com/gh/omisego/ewallet/${CIRCLE_BUILD_NUM}"
            WORKFLOW_URL="https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
            MESSAGE="omisego/ewallet branch ${CIRCLE_BRANCH} has been successfully built"
            RICH_MESSAGE="*omisego/ewallet* branch *${CIRCLE_BRANCH}* has been successfully built"

            curl -X POST -H 'Content-Type: application/json' --data "{ \
              \"attachments\": [ \
                { \
                  \"fallback\": \"${MESSAGE}\", \
                  \"text\": \":white_check_mark: ${RICH_MESSAGE}\", \
                  \"mrkdwn\": true, \
                  \"color\": \"#1cbf43\", \
                  \"fields\": [ \
                    { \
                      \"title\": \"Branch\", \
                      \"value\": \"<$GH_URL|$CIRCLE_BRANCH>\", \
                      \"short\": true \
                    }, { \
                      \"title\": \"Build\", \
                      \"value\": \"<$CIRCLE_URL|$CIRCLE_BUILD_NUM>\", \
                      \"short\": true \
                    } \
                  ] \
                } \
              ] \
            }" ${SLACK_WEBHOOK}

  notify_slack_deploy:
    description: "Notify Slack Deploy"
    steps:
      - run:
          name: Notify Slack
          command: |
            if [ -z "$SLACK_WEBHOOK" ]; then
              printf "\\033[0;33mSkipping Slack notification (SLACK_WEBHOOK missing)\\033[0;0m\\n"
              exit 0
            fi

            TAG="$(printf "%s" "$CIRCLE_SHA1" | head -c 8)"
            MESSAGE="ewallet.staging.omisego.io has been deployed with omisego/ewallet:${TAG}"
            RICH_MESSAGE="*ewallet.staging.omisego.io* has been deployed with *omisego/ewallet:${TAG}*"

            curl -X POST -H 'Content-Type: application/json' --data "{ \
              \"attachments\": [ \
                { \
                  \"fallback\": \"${MESSAGE}\", \
                  \"text\": \":rocket: ${RICH_MESSAGE}\", \
                  \"mrkdwn\": true, \
                  \"color\": \"#5f31d9\" \
                } \
              ] \
            }" ${SLACK_WEBHOOK}

  setup_ewallet_workspace:
    description: "Setup eWallet workspace"
    steps:
      - attach_workspace:
          name: Attach workspace
          at: ~/


jobs:
  build:
    executor: builder
    steps:
      - checkout
      - run: |
          mkdir -p ~/var
          elixir --version | tee ~/var/elixir-version
          node --version | tee ~/var/node-version
      - run: make build-test
      - run: make deps-assets
      - persist_to_workspace:
          name: Persist workspace
          root: ~/
          paths:
            - var/
            - src/deps
            - src/_build
            - src/apps/frontend/assets/node_modules
      - notify_slack_failure

  lint:
    executor: builder
    steps:
      - checkout
      - setup_ewallet_workspace
      - run: make check-format
      - run: make check-credo
      - notify_slack_failure

  dialyze:
    executor: builder
    steps:
      - checkout
      - setup_ewallet_workspace
      - restore_cache:
          name: Restore runtime PLT from cache
          keys:
            - v2-ewallet-plt-{{ checksum "~/var/elixir-version" }}-{{ checksum "mix.lock" }}
            - v2-ewallet-plt-{{ checksum "~/var/elixir-version" }}-
            - v2-ewallet-plt-
      - run: |
          export PLT_CORE_PATH=$HOME/var/dialyzer
          mkdir -p $PLT_CORE_PATH
          make check-dialyzer
      - save_cache:
          name: Cache runtime PLT
          key: v2-ewallet-plt-{{ checksum "~/var/elixir-version" }}-{{ checksum "mix.lock" }}
          paths:
            - ~/var/dialyzer
          when: always
      ## We're silenting dialyzer failure until we've fixed all dialyzer offense.
      ## TODO: enable this once Dialyzer is fixed.
      # - notify_slack_failure

  test:
    executor: builder_pg
    environment:
      DATABASE_URL: postgresql://postgres:@localhost:5432/ewallet
      LOCAL_LEDGER_DATABASE_URL: postgresql://postgres:@localhost:5432/ledger
    steps:
      - checkout
      - setup_ewallet_workspace
      - run: make test-ewallet
      - run: make test-assets
      - notify_slack_failure

  publish:
    executor: metal
    steps:
      - checkout
      - run: make docker IMAGE_NAME=$IMAGE_NAME
      - run: sh .circleci/ci_e2e.sh
      - run: sh .circleci/ci_publish.sh
      - notify_slack_failure
      - notify_slack

  deploy:
    executor: deploy
    steps:
      - checkout
      - run: sh .circleci/ci_deploy.sh
      - notify_slack_failure
      - notify_slack_deploy


workflows:
  test_build:
    jobs:
      - build:
          filters: &all_branches
            branches:
              only: /.*/
            tags:
              only: /.*/
      - lint:
          requires: [build]
          filters: *all_branches
      - test:
          requires: [build]
          filters: *all_branches
      - dialyze:
          requires: [build]
          filters: *all_branches
      - publish:
          requires: [lint, test]
          filters: *all_branches

      # Deploy to staging in case of master branch.
      - deploy:
          requires: [publish]
          filters:
            branches:
              only:
                - master
